<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.18.0210.2209                               -->
<workbook original-version='10.5' source-build='10.5.1 (10500.18.0210.2209)' source-platform='win' version='10.5' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='USFlightDelayAnalysis-Version3-Final' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.5'>
      <aliases enabled='yes' />
      <column caption='Top N Origin' datatype='integer' default-format='N' name='[Origin Parameter]' param-domain-type='range' role='measure' type='quantitative' value='2'>
        <calculation class='tableau' formula='2' />
        <range granularity='1' max='10' min='1' />
      </column>
    </datasource>
    <datasource caption='2008' inline='true' name='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='2008' name='textscan.0ackd390a3jo9a16qlgov0ytvlev'>
            <connection class='textscan' directory='C:/Users/sridhar/Downloads' filename='2008.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='carriers' name='textscan.1kfc33f0k67zgz1cg4vae1uyzqs6'>
            <connection class='textscan' directory='C:/Users/sridhar/Downloads' filename='carriers.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='airports' name='textscan.1u25lfa1egld4x13z30ag10zd2hw'>
            <connection class='textscan' directory='C:/Users/sridhar/Downloads' filename='airports.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='airports (2)' name='textscan.0m1unck1fvzbc71ek6cms07d5o7d'>
            <connection class='textscan' directory='C:/Users/sridhar/Downloads' filename='airports.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[2008.csv].[Dest]' />
              <expression op='[airports.csv1].[iata]' />
            </expression>
          </clause>
          <relation join='left' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[2008.csv].[Origin]' />
                <expression op='[airports.csv].[iata]' />
              </expression>
            </clause>
            <relation join='left' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[2008.csv].[UniqueCarrier]' />
                  <expression op='[carriers.csv].[Code]' />
                </expression>
              </clause>
              <relation connection='textscan.0ackd390a3jo9a16qlgov0ytvlev' name='2008.csv' table='[2008#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='Year' ordinal='0' />
                  <column datatype='integer' name='Month' ordinal='1' />
                  <column datatype='integer' name='DayofMonth' ordinal='2' />
                  <column datatype='integer' name='DayOfWeek' ordinal='3' />
                  <column datatype='integer' name='DepTime' ordinal='4' />
                  <column datatype='integer' name='CRSDepTime' ordinal='5' />
                  <column datatype='integer' name='ArrTime' ordinal='6' />
                  <column datatype='integer' name='CRSArrTime' ordinal='7' />
                  <column datatype='string' name='UniqueCarrier' ordinal='8' />
                  <column datatype='integer' name='FlightNum' ordinal='9' />
                  <column datatype='string' name='TailNum' ordinal='10' />
                  <column datatype='integer' name='ActualElapsedTime' ordinal='11' />
                  <column datatype='integer' name='CRSElapsedTime' ordinal='12' />
                  <column datatype='integer' name='AirTime' ordinal='13' />
                  <column datatype='integer' name='ArrDelay' ordinal='14' />
                  <column datatype='integer' name='DepDelay' ordinal='15' />
                  <column datatype='string' name='Origin' ordinal='16' />
                  <column datatype='string' name='Dest' ordinal='17' />
                  <column datatype='integer' name='Distance' ordinal='18' />
                  <column datatype='integer' name='TaxiIn' ordinal='19' />
                  <column datatype='integer' name='TaxiOut' ordinal='20' />
                  <column datatype='integer' name='Cancelled' ordinal='21' />
                  <column datatype='string' name='CancellationCode' ordinal='22' />
                  <column datatype='integer' name='Diverted' ordinal='23' />
                  <column datatype='integer' name='CarrierDelay' ordinal='24' />
                  <column datatype='integer' name='WeatherDelay' ordinal='25' />
                  <column datatype='integer' name='NASDelay' ordinal='26' />
                  <column datatype='integer' name='SecurityDelay' ordinal='27' />
                  <column datatype='integer' name='LateAircraftDelay' ordinal='28' />
                </columns>
              </relation>
              <relation connection='textscan.1kfc33f0k67zgz1cg4vae1uyzqs6' name='carriers.csv' table='[carriers#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Code' ordinal='0' />
                  <column datatype='string' name='Description' ordinal='1' />
                </columns>
              </relation>
            </relation>
            <relation connection='textscan.1u25lfa1egld4x13z30ag10zd2hw' name='airports.csv' table='[airports#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                <column datatype='string' name='iata' ordinal='0' />
                <column datatype='string' name='airport' ordinal='1' />
                <column datatype='string' name='city' ordinal='2' />
                <column datatype='string' name='state' ordinal='3' />
                <column datatype='string' name='country' ordinal='4' />
                <column datatype='real' name='lat' ordinal='5' />
                <column datatype='real' name='long' ordinal='6' />
              </columns>
            </relation>
          </relation>
          <relation connection='textscan.0m1unck1fvzbc71ek6cms07d5o7d' name='airports.csv1' table='[airports#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='string' name='iata' ordinal='0' />
              <column datatype='string' name='airport' ordinal='1' />
              <column datatype='string' name='city' ordinal='2' />
              <column datatype='string' name='state' ordinal='3' />
              <column datatype='string' name='country' ordinal='4' />
              <column datatype='real' name='lat' ordinal='5' />
              <column datatype='real' name='long' ordinal='6' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[ActualElapsedTime]' value='[2008.csv].[ActualElapsedTime]' />
          <map key='[AirTime]' value='[2008.csv].[AirTime]' />
          <map key='[ArrDelay]' value='[2008.csv].[ArrDelay]' />
          <map key='[ArrTime]' value='[2008.csv].[ArrTime]' />
          <map key='[CRSArrTime]' value='[2008.csv].[CRSArrTime]' />
          <map key='[CRSDepTime]' value='[2008.csv].[CRSDepTime]' />
          <map key='[CRSElapsedTime]' value='[2008.csv].[CRSElapsedTime]' />
          <map key='[CancellationCode]' value='[2008.csv].[CancellationCode]' />
          <map key='[Cancelled]' value='[2008.csv].[Cancelled]' />
          <map key='[CarrierDelay]' value='[2008.csv].[CarrierDelay]' />
          <map key='[Code]' value='[carriers.csv].[Code]' />
          <map key='[DayOfWeek]' value='[2008.csv].[DayOfWeek]' />
          <map key='[DayofMonth]' value='[2008.csv].[DayofMonth]' />
          <map key='[DepDelay]' value='[2008.csv].[DepDelay]' />
          <map key='[DepTime]' value='[2008.csv].[DepTime]' />
          <map key='[Description]' value='[carriers.csv].[Description]' />
          <map key='[Dest]' value='[2008.csv].[Dest]' />
          <map key='[Distance]' value='[2008.csv].[Distance]' />
          <map key='[Diverted]' value='[2008.csv].[Diverted]' />
          <map key='[FlightNum]' value='[2008.csv].[FlightNum]' />
          <map key='[LateAircraftDelay]' value='[2008.csv].[LateAircraftDelay]' />
          <map key='[Month]' value='[2008.csv].[Month]' />
          <map key='[NASDelay]' value='[2008.csv].[NASDelay]' />
          <map key='[Origin]' value='[2008.csv].[Origin]' />
          <map key='[SecurityDelay]' value='[2008.csv].[SecurityDelay]' />
          <map key='[TailNum]' value='[2008.csv].[TailNum]' />
          <map key='[TaxiIn]' value='[2008.csv].[TaxiIn]' />
          <map key='[TaxiOut]' value='[2008.csv].[TaxiOut]' />
          <map key='[UniqueCarrier]' value='[2008.csv].[UniqueCarrier]' />
          <map key='[WeatherDelay]' value='[2008.csv].[WeatherDelay]' />
          <map key='[Year]' value='[2008.csv].[Year]' />
          <map key='[airport (airports.csv1)]' value='[airports.csv1].[airport]' />
          <map key='[airport]' value='[airports.csv].[airport]' />
          <map key='[city (airports.csv1)]' value='[airports.csv1].[city]' />
          <map key='[city]' value='[airports.csv].[city]' />
          <map key='[country (airports.csv1)]' value='[airports.csv1].[country]' />
          <map key='[country]' value='[airports.csv].[country]' />
          <map key='[iata (airports.csv1)]' value='[airports.csv1].[iata]' />
          <map key='[iata]' value='[airports.csv].[iata]' />
          <map key='[lat (airports.csv1)]' value='[airports.csv1].[lat]' />
          <map key='[lat]' value='[airports.csv].[lat]' />
          <map key='[long (airports.csv1)]' value='[airports.csv1].[long]' />
          <map key='[long]' value='[airports.csv].[long]' />
          <map key='[state (airports.csv1)]' value='[airports.csv1].[state]' />
          <map key='[state]' value='[airports.csv].[state]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DayofMonth</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DayofMonth]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>DayofMonth</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DayOfWeek</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DayOfWeek]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>DayOfWeek</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepTime</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DepTime]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>DepTime</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CRSDepTime</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CRSDepTime]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>CRSDepTime</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrTime</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ArrTime]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>ArrTime</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CRSArrTime</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CRSArrTime]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>CRSArrTime</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UniqueCarrier</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UniqueCarrier]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>UniqueCarrier</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FlightNum</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FlightNum]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>FlightNum</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TailNum</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TailNum]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>TailNum</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ActualElapsedTime</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ActualElapsedTime]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>ActualElapsedTime</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CRSElapsedTime</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CRSElapsedTime]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>CRSElapsedTime</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AirTime</remote-name>
            <remote-type>20</remote-type>
            <local-name>[AirTime]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>AirTime</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrDelay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ArrDelay]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>ArrDelay</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepDelay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DepDelay]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>DepDelay</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Origin</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Origin]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>Origin</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dest</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Dest]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>Dest</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Distance</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Distance]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>Distance</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TaxiIn</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TaxiIn]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>TaxiIn</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TaxiOut</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TaxiOut]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>TaxiOut</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cancelled</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cancelled]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>Cancelled</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CancellationCode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CancellationCode]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>CancellationCode</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Diverted</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Diverted]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>Diverted</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CarrierDelay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CarrierDelay]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>CarrierDelay</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WeatherDelay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[WeatherDelay]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>WeatherDelay</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NASDelay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NASDelay]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>NASDelay</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SecurityDelay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SecurityDelay]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>SecurityDelay</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LateAircraftDelay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LateAircraftDelay]</local-name>
            <parent-name>[2008.csv]</parent-name>
            <remote-alias>LateAircraftDelay</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[carriers.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[carriers.csv]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Description]</local-name>
            <parent-name>[carriers.csv]</parent-name>
            <remote-alias>Description</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iata</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iata]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>iata</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[airport]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>airport</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[long]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>long</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[airports.csv1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iata</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iata (airports.csv1)]</local-name>
            <parent-name>[airports.csv1]</parent-name>
            <remote-alias>iata</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[airport (airports.csv1)]</local-name>
            <parent-name>[airports.csv1]</parent-name>
            <remote-alias>airport</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city (airports.csv1)]</local-name>
            <parent-name>[airports.csv1]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state (airports.csv1)]</local-name>
            <parent-name>[airports.csv1]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country (airports.csv1)]</local-name>
            <parent-name>[airports.csv1]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>42</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat (airports.csv1)]</local-name>
            <parent-name>[airports.csv1]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[long (airports.csv1)]</local-name>
            <parent-name>[airports.csv1]</parent-name>
            <remote-alias>long</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[pcto:sum:Calculation_275564047012425728:qk:4]&quot;' value='Arr Delay' />
          <alias key='&quot;[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[pcto:sum:DepDelay:qk:1]&quot;' value='Dep Delay' />
        </aliases>
      </column>
      <column caption='Actual Elapsed Time' datatype='integer' name='[ActualElapsedTime]' role='measure' type='quantitative' />
      <column caption='Air Time' datatype='integer' name='[AirTime]' role='measure' type='quantitative' />
      <column caption='Arr Delay' datatype='integer' name='[ArrDelay]' role='measure' type='quantitative' />
      <column caption='Arr Time' datatype='integer' name='[ArrTime]' role='measure' type='quantitative' />
      <column caption='CRS Arr Time' datatype='integer' name='[CRSArrTime]' role='measure' type='quantitative' />
      <column caption='CRS Dep Time' datatype='integer' name='[CRSDepTime]' role='measure' type='quantitative' />
      <column caption='CRS Elapsed Time' datatype='integer' name='[CRSElapsedTime]' role='measure' type='quantitative' />
      <column caption='TotalDelayFactors' datatype='real' name='[Calculation_106397589529841664]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([NASDelay]+[SecurityDelay]+[LateAircraftDelay]+[SecurityDelay])' />
      </column>
      <column caption='OnTimeArrival' datatype='real' default-format='p0.00%' name='[Calculation_106397589540847618]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_275564049490145285])/SUM([Number of Records])' />
      </column>
      <column caption='ArrDelayFlag' datatype='integer' name='[Calculation_275564047012425728]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IIF([ArrDelay]&gt;0,1,0)' />
      </column>
      <column caption='DepartureDelayFlag' datatype='integer' name='[Calculation_275564047012651009]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IIF([DepDelay]&gt;0,1,0)' />
      </column>
      <column caption='Cancellation Reason' datatype='string' name='[Calculation_275564049101848580]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF ([CancellationCode])=&quot;A&quot; THEN &quot;Carrier&quot;&#13;&#10;ELSEIF ([CancellationCode])=&quot;B&quot; THEN &quot;weather&quot;&#13;&#10;ELSEIF ([CancellationCode])=&quot;C&quot; THEN &quot;NAS&quot;&#13;&#10;ELSEIF ([CancellationCode])=&quot;D&quot; THEN &quot;security&quot;&#13;&#10;ELSE &quot;Unknown&quot; END' />
      </column>
      <column caption='OnTime-ArrivalFlag' datatype='integer' name='[Calculation_275564049490145285]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='IIF([ArrDelay]&lt;=0,1,0)' />
      </column>
      <column caption='EarlyDepartureButLateArrival' datatype='integer' name='[Calculation_296674673097711616]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ([DepDelay])&lt;=0 AND ([ArrDelay]&gt;0) THEN 1 ELSE 0 END' />
      </column>
      <column caption='EarlyArrivalButLateDeparture' datatype='integer' name='[Calculation_296674673098059777]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ([ArrDelay]&lt;=0) AND ([DepDelay]&gt;0) THEN 1 ELSE 0 END' />
      </column>
      <column caption='EarlyArrLateDep' datatype='real' default-format='p0.00%' name='[Calculation_296674673099108354]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_296674673098059777])/ SUM([Number of Records])' />
      </column>
      <column caption='Cancellation Code' datatype='string' name='[CancellationCode]' role='dimension' type='nominal' />
      <column caption='Carrier Delay' datatype='integer' name='[CarrierDelay]' role='measure' type='quantitative' />
      <column caption='Day Of Week' datatype='integer' name='[DayOfWeek]' role='dimension' type='quantitative' />
      <column caption='Dayof Month' datatype='integer' name='[DayofMonth]' role='dimension' type='quantitative' />
      <column caption='Dep Delay' datatype='integer' name='[DepDelay]' role='measure' type='quantitative' />
      <column caption='Dep Time' datatype='integer' name='[DepTime]' role='measure' type='quantitative' />
      <column caption='CarrierName' datatype='string' name='[Description]' role='dimension' type='nominal' />
      <column datatype='string' name='[Dest]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
      <column datatype='integer' name='[Distance]' role='measure' type='quantitative' />
      <column caption='Flight Num' datatype='integer' name='[FlightNum]' role='dimension' type='ordinal' />
      <column caption='Late Aircraft Delay' datatype='integer' name='[LateAircraftDelay]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
      <column caption='NAS Delay' datatype='integer' name='[NASDelay]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='OnTime-DepartureFlag' datatype='integer' name='[OnTime-ArrivalFlag (copy)]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='IIF([DepDelay]&lt;=0,1,0)' />
      </column>
      <column caption='OnTimeDeparture' datatype='real' default-format='p0.00%' name='[OnTimeArrival (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([OnTime-ArrivalFlag (copy)])/SUM([Number of Records])' />
      </column>
      <column datatype='string' name='[Origin]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
      <column caption='Security Delay' datatype='integer' name='[SecurityDelay]' role='measure' type='quantitative' />
      <column caption='Tail Num' datatype='string' name='[TailNum]' role='dimension' type='nominal' />
      <column caption='Taxi In' datatype='integer' name='[TaxiIn]' role='measure' type='quantitative' />
      <column caption='Taxi Out' datatype='integer' name='[TaxiOut]' role='measure' type='quantitative' />
      <column caption='Unique Carrier' datatype='string' name='[UniqueCarrier]' role='dimension' type='nominal' />
      <column caption='Weather Delay' datatype='integer' name='[WeatherDelay]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column caption='Airport (Airports.Csv1)' datatype='string' name='[airport (airports.csv1)]' role='dimension' type='nominal' />
      <column caption='Airport' datatype='string' name='[airport]' role='dimension' type='nominal' />
      <column caption='DestinationCity' datatype='string' name='[city (airports.csv1)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='OrginCity' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='DestinationCountry' datatype='string' name='[country (airports.csv1)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='OriginCountry' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Dest_Iata' datatype='string' name='[iata (airports.csv1)]' role='dimension' type='nominal' />
      <column caption='Iata' datatype='string' name='[iata]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
      <column aggregation='Avg' caption='Lat (Airports.Csv1)' datatype='real' name='[lat (airports.csv1)]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Long (Airports.Csv1)' datatype='real' name='[long (airports.csv1)]' role='measure' type='quantitative' />
      <column caption='Long' datatype='real' name='[long]' role='measure' type='quantitative' />
      <column caption='Dest_State' datatype='string' name='[state (airports.csv1)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='OriginState' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[AirTime]' derivation='Avg' name='[avg:AirTime:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ArrDelay]' derivation='Avg' name='[avg:ArrDelay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_275564047012425728]' derivation='Avg' name='[avg:Calculation_275564047012425728:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_275564049490145285]' derivation='Avg' name='[avg:Calculation_275564049490145285:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CarrierDelay]' derivation='Avg' name='[avg:CarrierDelay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DepDelay]' derivation='Avg' name='[avg:DepDelay:ok]' pivot='key' type='ordinal' />
      <column-instance column='[DepDelay]' derivation='Avg' name='[avg:DepDelay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Distance]' derivation='Avg' name='[avg:Distance:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SecurityDelay]' derivation='Avg' name='[avg:SecurityDelay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_275564047012425728]' derivation='Sum' name='[diff:sum:Calculation_275564047012425728:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_275564049101848580]' derivation='None' name='[none:Calculation_275564049101848580:nk]' pivot='key' type='nominal' />
      <column-instance column='[Description]' derivation='None' name='[none:Description:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[UniqueCarrier]' derivation='None' name='[none:UniqueCarrier:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_275564047012425728]' derivation='Sum' name='[pcto:sum:Calculation_275564047012425728:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_275564047012425728]' derivation='Sum' name='[pcto:sum:Calculation_275564047012425728:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:UniqueCarrier:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_275564047012425728]' derivation='Sum' name='[pcto:sum:Calculation_275564047012425728:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_275564049490145285]' derivation='Sum' name='[pcto:sum:Calculation_275564049490145285:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_275564049490145285]' derivation='Sum' name='[pcto:sum:Calculation_275564049490145285:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_275564049490145285]' derivation='Sum' name='[pcto:sum:Calculation_275564049490145285:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[DepDelay]' derivation='Sum' name='[pcto:sum:DepDelay:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:UniqueCarrier:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[DepDelay]' derivation='Sum' name='[pcto:sum:DepDelay:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[ArrDelay]' derivation='Sum' name='[sum:ArrDelay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_275564047012425728]' derivation='Sum' name='[sum:Calculation_275564047012425728:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_275564047012651009]' derivation='Sum' name='[sum:Calculation_275564047012651009:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_275564049490145285]' derivation='Sum' name='[sum:Calculation_275564049490145285:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_296674673097711616]' derivation='Sum' name='[sum:Calculation_296674673097711616:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_296674673098059777]' derivation='Sum' name='[sum:Calculation_296674673098059777:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CarrierDelay]' derivation='Sum' name='[sum:CarrierDelay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DepDelay]' derivation='Sum' name='[sum:DepDelay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Distance]' derivation='Sum' name='[sum:Distance:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LateAircraftDelay]' derivation='Sum' name='[sum:LateAircraftDelay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SecurityDelay]' derivation='Sum' name='[sum:SecurityDelay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_106397589540847618]' derivation='User' name='[usr:Calculation_106397589540847618:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_296674673099108354]' derivation='User' name='[usr:Calculation_296674673099108354:qk]' pivot='key' type='quantitative' />
      <column-instance column='[OnTimeArrival (copy)]' derivation='User' name='[usr:OnTimeArrival (copy):qk]' pivot='key' type='quantitative' />
      <group caption='Action (DestinationCity)' hidden='true' name='[Action (DestinationCity)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[city (airports.csv1)]' />
        </groupfilter>
      </group>
      <group caption='Action (DestinationCity,OrginCity)' hidden='true' name='[Action (DestinationCity,OrginCity)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[city (airports.csv1)]' />
          <groupfilter function='level-members' level='[city]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='DestinationCountry, Dest_State'>
          <field>[country (airports.csv1)]</field>
          <field>[state (airports.csv1)]</field>
          <field>[city (airports.csv1)]</field>
        </drill-path>
        <drill-path name='country, state, city'>
          <field>[country]</field>
          <field>[state]</field>
          <field>[city]</field>
        </drill-path>
      </drill-paths>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/sridhar/Documents/My Tableau Repository/Datasources/2008.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='03/22/2018 04:37:13 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[ActualElapsedTime]' value='[Extract].[ActualElapsedTime]' />
            <map key='[AirTime]' value='[Extract].[AirTime]' />
            <map key='[ArrDelay]' value='[Extract].[ArrDelay]' />
            <map key='[ArrTime]' value='[Extract].[ArrTime]' />
            <map key='[CRSArrTime]' value='[Extract].[CRSArrTime]' />
            <map key='[CRSDepTime]' value='[Extract].[CRSDepTime]' />
            <map key='[CRSElapsedTime]' value='[Extract].[CRSElapsedTime]' />
            <map key='[CancellationCode]' value='[Extract].[CancellationCode]' />
            <map key='[Cancelled]' value='[Extract].[Cancelled]' />
            <map key='[CarrierDelay]' value='[Extract].[CarrierDelay]' />
            <map key='[Code]' value='[Extract].[Code]' />
            <map key='[DayOfWeek]' value='[Extract].[DayOfWeek]' />
            <map key='[DayofMonth]' value='[Extract].[DayofMonth]' />
            <map key='[DepDelay]' value='[Extract].[DepDelay]' />
            <map key='[DepTime]' value='[Extract].[DepTime]' />
            <map key='[Description]' value='[Extract].[Description]' />
            <map key='[Dest]' value='[Extract].[Dest]' />
            <map key='[Distance]' value='[Extract].[Distance]' />
            <map key='[Diverted]' value='[Extract].[Diverted]' />
            <map key='[FlightNum]' value='[Extract].[FlightNum]' />
            <map key='[LateAircraftDelay]' value='[Extract].[LateAircraftDelay]' />
            <map key='[Month]' value='[Extract].[Month]' />
            <map key='[NASDelay]' value='[Extract].[NASDelay]' />
            <map key='[Origin]' value='[Extract].[Origin]' />
            <map key='[SecurityDelay]' value='[Extract].[SecurityDelay]' />
            <map key='[TailNum]' value='[Extract].[TailNum]' />
            <map key='[TaxiIn]' value='[Extract].[TaxiIn]' />
            <map key='[TaxiOut]' value='[Extract].[TaxiOut]' />
            <map key='[UniqueCarrier]' value='[Extract].[UniqueCarrier]' />
            <map key='[WeatherDelay]' value='[Extract].[WeatherDelay]' />
            <map key='[Year]' value='[Extract].[Year]' />
            <map key='[airport (airports.csv1)]' value='[Extract].[airport]' />
            <map key='[airport]' value='[Extract].[airport1]' />
            <map key='[city (airports.csv1)]' value='[Extract].[city]' />
            <map key='[city]' value='[Extract].[city1]' />
            <map key='[country (airports.csv1)]' value='[Extract].[country]' />
            <map key='[country]' value='[Extract].[country1]' />
            <map key='[iata (airports.csv1)]' value='[Extract].[iata]' />
            <map key='[iata]' value='[Extract].[iata1]' />
            <map key='[lat (airports.csv1)]' value='[Extract].[lat]' />
            <map key='[lat]' value='[Extract].[lat1]' />
            <map key='[long (airports.csv1)]' value='[Extract].[long]' />
            <map key='[long]' value='[Extract].[long1]' />
            <map key='[state (airports.csv1)]' value='[Extract].[state]' />
            <map key='[state]' value='[Extract].[state1]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='7009728' timestamp-start='2018-03-22 04:37:13.931' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>0</ordinal>
              <family>2008.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Month</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Month]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Month</remote-alias>
              <ordinal>1</ordinal>
              <family>2008.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DayofMonth</remote-name>
              <remote-type>20</remote-type>
              <local-name>[DayofMonth]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DayofMonth</remote-alias>
              <ordinal>2</ordinal>
              <family>2008.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>31</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DayOfWeek</remote-name>
              <remote-type>20</remote-type>
              <local-name>[DayOfWeek]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DayOfWeek</remote-alias>
              <ordinal>3</ordinal>
              <family>2008.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DepTime</remote-name>
              <remote-type>20</remote-type>
              <local-name>[DepTime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DepTime</remote-alias>
              <ordinal>4</ordinal>
              <family>2008.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>879</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CRSDepTime</remote-name>
              <remote-type>20</remote-type>
              <local-name>[CRSDepTime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CRSDepTime</remote-alias>
              <ordinal>5</ordinal>
              <family>2008.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>312</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ArrTime</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ArrTime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ArrTime</remote-alias>
              <ordinal>6</ordinal>
              <family>2008.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>847</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CRSArrTime</remote-name>
              <remote-type>20</remote-type>
              <local-name>[CRSArrTime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CRSArrTime</remote-alias>
              <ordinal>7</ordinal>
              <family>2008.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>530</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>UniqueCarrier</remote-name>
              <remote-type>129</remote-type>
              <local-name>[UniqueCarrier]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>UniqueCarrier</remote-alias>
              <ordinal>8</ordinal>
              <family>2008.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>FlightNum</remote-name>
              <remote-type>20</remote-type>
              <local-name>[FlightNum]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>FlightNum</remote-alias>
              <ordinal>9</ordinal>
              <family>2008.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1727</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TailNum</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TailNum]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TailNum</remote-alias>
              <ordinal>10</ordinal>
              <family>2008.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2284</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ActualElapsedTime</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ActualElapsedTime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ActualElapsedTime</remote-alias>
              <ordinal>11</ordinal>
              <family>2008.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>215</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CRSElapsedTime</remote-name>
              <remote-type>20</remote-type>
              <local-name>[CRSElapsedTime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CRSElapsedTime</remote-alias>
              <ordinal>12</ordinal>
              <family>2008.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>175</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AirTime</remote-name>
              <remote-type>20</remote-type>
              <local-name>[AirTime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AirTime</remote-alias>
              <ordinal>13</ordinal>
              <family>2008.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>204</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ArrDelay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ArrDelay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ArrDelay</remote-alias>
              <ordinal>14</ordinal>
              <family>2008.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>113</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DepDelay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[DepDelay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DepDelay</remote-alias>
              <ordinal>15</ordinal>
              <family>2008.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>83</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Origin</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Origin]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Origin</remote-alias>
              <ordinal>16</ordinal>
              <family>2008.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>114</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Dest</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Dest]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Dest</remote-alias>
              <ordinal>17</ordinal>
              <family>2008.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>100</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Distance</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Distance]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Distance</remote-alias>
              <ordinal>18</ordinal>
              <family>2008.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>550</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TaxiIn</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TaxiIn]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TaxiIn</remote-alias>
              <ordinal>19</ordinal>
              <family>2008.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>29</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TaxiOut</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TaxiOut]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TaxiOut</remote-alias>
              <ordinal>20</ordinal>
              <family>2008.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>49</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Cancelled</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Cancelled]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Cancelled</remote-alias>
              <ordinal>21</ordinal>
              <family>2008.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CancellationCode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CancellationCode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CancellationCode</remote-alias>
              <ordinal>22</ordinal>
              <family>2008.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Diverted</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Diverted]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Diverted</remote-alias>
              <ordinal>23</ordinal>
              <family>2008.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CarrierDelay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[CarrierDelay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CarrierDelay</remote-alias>
              <ordinal>24</ordinal>
              <family>2008.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>35</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>WeatherDelay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[WeatherDelay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>WeatherDelay</remote-alias>
              <ordinal>25</ordinal>
              <family>2008.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NASDelay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[NASDelay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>NASDelay</remote-alias>
              <ordinal>26</ordinal>
              <family>2008.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>40</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SecurityDelay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[SecurityDelay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SecurityDelay</remote-alias>
              <ordinal>27</ordinal>
              <family>2008.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LateAircraftDelay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[LateAircraftDelay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LateAircraftDelay</remote-alias>
              <ordinal>28</ordinal>
              <family>2008.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>30</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Code</remote-alias>
              <ordinal>29</ordinal>
              <family>carriers.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Description</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Description]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Description</remote-alias>
              <ordinal>30</ordinal>
              <family>carriers.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>iata1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[iata]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>iata1</remote-alias>
              <ordinal>31</ordinal>
              <family>airports.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>114</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>airport1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[airport]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>airport1</remote-alias>
              <ordinal>32</ordinal>
              <family>airports.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>114</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>city1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>city1</remote-alias>
              <ordinal>33</ordinal>
              <family>airports.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>109</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state1</remote-alias>
              <ordinal>34</ordinal>
              <family>airports.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>46</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country1</remote-alias>
              <ordinal>35</ordinal>
              <family>airports.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lat1</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lat]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lat1</remote-alias>
              <ordinal>36</ordinal>
              <family>airports.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>114</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>long1</remote-name>
              <remote-type>5</remote-type>
              <local-name>[long]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>long1</remote-alias>
              <ordinal>37</ordinal>
              <family>airports.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>114</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>iata</remote-name>
              <remote-type>129</remote-type>
              <local-name>[iata (airports.csv1)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>iata</remote-alias>
              <ordinal>38</ordinal>
              <family>airports.csv1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>100</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>airport</remote-name>
              <remote-type>129</remote-type>
              <local-name>[airport (airports.csv1)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>airport</remote-alias>
              <ordinal>39</ordinal>
              <family>airports.csv1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>100</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city (airports.csv1)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>city</remote-alias>
              <ordinal>40</ordinal>
              <family>airports.csv1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>97</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state (airports.csv1)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state</remote-alias>
              <ordinal>41</ordinal>
              <family>airports.csv1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>41</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country (airports.csv1)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>42</ordinal>
              <family>airports.csv1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lat</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lat (airports.csv1)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lat</remote-alias>
              <ordinal>43</ordinal>
              <family>airports.csv1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>100</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>long</remote-name>
              <remote-type>5</remote-type>
              <local-name>[long (airports.csv1)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>long</remote-alias>
              <ordinal>44</ordinal>
              <family>airports.csv1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>100</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.634383' measure-ordering='alphabetic' measure-percentage='0.309927' parameter-percentage='0.0556901' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[avg:DepDelay:ok]' type='shape'>
            <map to='asterisk'>
              <bucket>6.4632356566708333</bucket>
            </map>
            <map to='asterisk'>
              <bucket>11.922537970871462</bucket>
            </map>
            <map to='asterisk'>
              <bucket>1726803.0</bucket>
            </map>
            <map to='asterisk'>
              <bucket>4137595.0</bucket>
            </map>
            <map to='circle'>
              <bucket>-10844.0</bucket>
            </map>
            <map to='circle'>
              <bucket>-1.3977829337458108</bucket>
            </map>
            <map to='circle'>
              <bucket>10.383034750411133</bucket>
            </map>
            <map to='circle'>
              <bucket>2950054.0</bucket>
            </map>
            <map to='diamond'>
              <bucket>6.7658596599836223</bucket>
            </map>
            <map to='diamond'>
              <bucket>12.000675279875033</bucket>
            </map>
            <map to='diamond'>
              <bucket>2205401.0</bucket>
            </map>
            <map to='diamond'>
              <bucket>4154705.0</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>7.4564427592619955</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>13.18522978602152</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>2403285.0</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>6196282.0</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>8.0077655727025636</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>13.280898264437912</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>2440878.0</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>7802966.0</bucket>
            </map>
            <map to='plus'>
              <bucket>5.7174896718939072</bucket>
            </map>
            <map to='plus'>
              <bucket>11.395866476493499</bucket>
            </map>
            <map to='plus'>
              <bucket>565097.0</bucket>
            </map>
            <map to='plus'>
              <bucket>3564817.0</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>9.2627130402608522</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>14.11257661236138</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>2556181.0</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>12349540.0</bucket>
            </map>
            <map to='square'>
              <bucket>0.45520134502064868</bucket>
            </map>
            <map to='square'>
              <bucket>10.695641776641581</bucket>
            </map>
            <map to='square'>
              <bucket>27887.0</bucket>
            </map>
            <map to='square'>
              <bucket>3285923.0</bucket>
            </map>
            <map to='times'>
              <bucket>5.9196015168339233</bucket>
            </map>
            <map to='times'>
              <bucket>11.536153117856601</bucket>
            </map>
            <map to='times'>
              <bucket>1020350.0</bucket>
            </map>
            <map to='times'>
              <bucket>3886953.0</bucket>
            </map>
            <map to='triangle'>
              <bucket>6.8487220104172257</bucket>
            </map>
            <map to='triangle'>
              <bucket>12.653395748122113</bucket>
            </map>
            <map to='triangle'>
              <bucket>2228375.0</bucket>
            </map>
            <map to='triangle'>
              <bucket>5054033.0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' palette='color_blind_10_0' type='palette'>
            <map to='#1170aa'>
              <bucket>&quot;[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:ArrDelay:qk]&quot;</bucket>
            </map>
            <map to='#1170aa'>
              <bucket>&quot;[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[pcto:sum:DepDelay:qk:1]&quot;</bucket>
            </map>
            <map to='#1170aa'>
              <bucket>&quot;[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Calculation_296674673097711616:qk]&quot;</bucket>
            </map>
            <map to='#1170aa'>
              <bucket>&quot;[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[usr:Calculation_372672918435885058:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:LateAircraftDelay:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:UniqueCarrier:nk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:ArrDelay:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs]&quot;</bucket>
            </map>
            <map to='#a3acb9'>
              <bucket>&quot;[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:Calculation_275564049490145285:qk]&quot;</bucket>
            </map>
            <map to='#a3acb9'>
              <bucket>&quot;[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[pcto:sum:Calculation_275564049490145285:qk:2]&quot;</bucket>
            </map>
            <map to='#a3acb9'>
              <bucket>&quot;[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[pcto:sum:Calculation_275564049490145285:qk:4]&quot;</bucket>
            </map>
            <map to='#a3acb9'>
              <bucket>&quot;[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[pcto:sum:Calculation_275564049490145285:qk]&quot;</bucket>
            </map>
            <map to='#a3acb9'>
              <bucket>&quot;[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Calculation_275564049490145285:qk]&quot;</bucket>
            </map>
            <map to='#a3acb9'>
              <bucket>&quot;[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[usr:Calculation_106397589540847618:qk]&quot;</bucket>
            </map>
            <map to='#a3acb9'>
              <bucket>&quot;[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[usr:Calculation_296674673099108354:qk]&quot;</bucket>
            </map>
            <map to='#a3acb9'>
              <bucket>&quot;[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[usr:OnTimeArrival (copy):qk]&quot;</bucket>
            </map>
            <map to='#a3cce9'>
              <bucket>&quot;[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:Distance:qk]&quot;</bucket>
            </map>
            <map to='#a3cce9'>
              <bucket>&quot;[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Distance:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:Calculation_275564047012425728:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[diff:sum:Calculation_275564047012425728:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[pcto:sum:Calculation_275564047012425728:qk:2]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[pcto:sum:Calculation_275564047012425728:qk]&quot;</bucket>
            </map>
            <map to='#c85200'>
              <bucket>&quot;[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Calculation_275564047012651009:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:CarrierDelay:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:CarrierDelay:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[pcto:sum:DepDelay:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:SecurityDelay:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:SecurityDelay:qk]&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:AirTime:qk]&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:DepDelay:qk]&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[cnt:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[pcto:sum:Calculation_275564047012425728:qk:4]&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Calculation_275564047012425728:qk]&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Calculation_296674673098059777:qk]&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:DepDelay:qk]&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Number of Records:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_275564049101848580:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Unknown&quot;</bucket>
            </map>
            <map to='#7b848f'>
              <bucket>&quot;weather&quot;</bucket>
            </map>
            <map to='#a3cce9'>
              <bucket>&quot;NAS&quot;</bucket>
            </map>
            <map to='#c85200'>
              <bucket>&quot;security&quot;</bucket>
            </map>
            <map to='#ffbc79'>
              <bucket>&quot;Carrier&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Description:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Delta Air Lines Inc.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AirTran Airways Corporation&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American Eagle Airlines Inc.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;JetBlue Airways&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Expressjet Airlines Inc.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Atlantic Southeast Airlines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Air Lines Inc.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alaska Airlines Inc.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Skywest Airlines Inc.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comair Inc.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mesa Airlines Inc.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Northwest Airlines Inc.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Southwest Airlines Co.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;US Airways Inc. (Merged with America West 9/05. Reporting for both starting 10/07.)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Frontier Airlines Inc.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Continental Air Lines Inc.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Aloha Airlines Inc.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pinnacle Airlines Inc.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hawaiian Airlines Inc.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Airlines Inc.&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:UniqueCarrier:nk]' palette='tableau20_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;XE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;WN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;B6&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CO&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;HA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;OH&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NW&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;EV&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;9E&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;F9&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;AQ&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MQ&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;OO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;UA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;YV&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;FL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DL&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs'>
      <datasources>
        <datasource caption='2008' name='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs' />
      </datasources>
      <datasource-dependencies datasource='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs'>
        <column caption='DestinationCity' datatype='string' name='[city (airports.csv1)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column caption='OrginCity' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column-instance column='[city (airports.csv1)]' derivation='None' name='[none:city (airports.csv1):nk]' pivot='key' type='nominal' />
        <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]'>
        <groupfilter function='level-members' level='[none:city (airports.csv1):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]'>
        <groupfilter function='member' level='[none:city:nk]' member='&quot;Chicago&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter1' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Avg.FlightDelays&amp;NumberOfFlights_Dashboard' type='sheet' worksheet='#ofFlights-Ontimarrivals&amp;DeparturestoDestination' />
      <link caption='Filter1' delimiter=',' escape='\' expression='tsl:Avg.FlightDelays%26NumberOfFlights_Dashboard?%5Bfederated.1plevgf0i4o8ik1b4p8mc1o1ptfs%5D.%5Bcity%20%28airports.csv1%29%5D~s0=&lt;[city (airports.csv1)]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='#ofFlights-Ontimarrivals&amp;DeparturestoDestination' />
        <param name='target' value='Avg.FlightDelays&amp;NumberOfFlights_Dashboard' />
      </command>
    </action>
    <datasources>
      <datasource caption='2008' name='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs' />
    </datasources>
    <datasource-dependencies datasource='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs'>
      <column caption='DestinationCity' datatype='string' name='[city (airports.csv1)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='#ofFlights &amp; Avg. AirTime-PerCarrier'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2008' name='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs' />
          </datasources>
          <datasource-dependencies datasource='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs'>
            <column caption='Air Time' datatype='integer' name='[AirTime]' role='measure' type='quantitative' />
            <column caption='CarrierName' datatype='string' name='[Description]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[AirTime]' derivation='Avg' name='[avg:AirTime:qk]' pivot='key' type='quantitative' />
            <column caption='DestinationCity' datatype='string' name='[city (airports.csv1)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='OrginCity' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Description]' derivation='None' name='[none:Description:nk]' pivot='key' type='nominal' />
            <column-instance column='[city (airports.csv1)]' derivation='None' name='[none:city (airports.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]</column>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='918' />
            <format attr='height' value='472' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]' />
              <size column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[cnt:Number of Records:qk]' />
              <text column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]' />
              <tooltip column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:AirTime:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='#ofFlights-Ontimarrivals&amp;DeparturestoDestination'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'># of flights, On-Time arrival and Departure Percentage from &lt;</run>
            <run fontalignment='1'>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]</run>
            <run fontalignment='1'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2008' name='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs' />
          </datasources>
          <datasource-dependencies datasource='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs'>
            <column caption='Arr Delay' datatype='integer' name='[ArrDelay]' role='measure' type='quantitative' />
            <column caption='OnTimeArrival' datatype='real' default-format='p0.00%' name='[Calculation_106397589540847618]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_275564049490145285])/SUM([Number of Records])' />
            </column>
            <column caption='OnTime-ArrivalFlag' datatype='integer' name='[Calculation_275564049490145285]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='IIF([ArrDelay]&lt;=0,1,0)' />
            </column>
            <column caption='Dep Delay' datatype='integer' name='[DepDelay]' role='measure' type='quantitative' />
            <column caption='CarrierName' datatype='string' name='[Description]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='OnTime-DepartureFlag' datatype='integer' name='[OnTime-ArrivalFlag (copy)]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='IIF([DepDelay]&lt;=0,1,0)' />
            </column>
            <column caption='OnTimeDeparture' datatype='real' default-format='p0.00%' name='[OnTimeArrival (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([OnTime-ArrivalFlag (copy)])/SUM([Number of Records])' />
            </column>
            <column caption='DestinationCity' datatype='string' name='[city (airports.csv1)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='OrginCity' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[Description]' derivation='None' name='[none:Description:nk]' pivot='key' type='nominal' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:ok]' pivot='key' type='ordinal' />
            <column-instance column='[city (airports.csv1)]' derivation='None' name='[none:city (airports.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_106397589540847618]' derivation='User' name='[usr:Calculation_106397589540847618:qk]' pivot='key' type='quantitative' />
            <column-instance column='[OnTimeArrival (copy)]' derivation='User' name='[usr:OnTimeArrival (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Description:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Month:ok]' filter-group='3'>
            <groupfilter from='1' function='range' level='[none:Month:ok]' to='12' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]</column>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]</column>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Month:ok]</column>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Number of Records:qk]' />
              <color column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Number of Records:qk]' />
              <lod column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[usr:Calculation_106397589540847618:qk]' />
              <lod column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[usr:OnTimeArrival (copy):qk]' />
              <lod column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]' />
              <text column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='#ofFlightsDiverted&amp;Cancelled'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2008' name='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs' />
          </datasources>
          <datasource-dependencies datasource='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs'>
            <column datatype='integer' name='[Cancelled]' role='measure' type='quantitative' />
            <column caption='CarrierName' datatype='string' name='[Description]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Diverted]' role='measure' type='quantitative' />
            <column caption='DestinationCity' datatype='string' name='[city (airports.csv1)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='OrginCity' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[Description]' derivation='None' name='[none:Description:nk]' pivot='key' type='nominal' />
            <column-instance column='[city (airports.csv1)]' derivation='None' name='[none:city (airports.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cancelled]' derivation='Sum' name='[sum:Cancelled:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Diverted]' derivation='Sum' name='[sum:Diverted:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]' direction='DESC' using='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Diverted:qk]' />
          <slices>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]</column>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Diverted:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Cancelled:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]</rows>
        <cols>([federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Diverted:qk] + [federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Cancelled:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='ArrDelay-DepDelay-Per Carrier'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2008' name='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs' />
          </datasources>
          <datasource-dependencies datasource='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs'>
            <column caption='Arr Delay' datatype='integer' name='[ArrDelay]' role='measure' type='quantitative' />
            <column caption='Dep Delay' datatype='integer' name='[DepDelay]' role='measure' type='quantitative' />
            <column caption='CarrierName' datatype='string' name='[Description]' role='dimension' type='nominal' />
            <column-instance column='[ArrDelay]' derivation='Avg' name='[avg:ArrDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DepDelay]' derivation='Avg' name='[avg:DepDelay:qk]' pivot='key' type='quantitative' />
            <column caption='DestinationCity' datatype='string' name='[city (airports.csv1)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='OrginCity' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[Description]' derivation='None' name='[none:Description:nk]' pivot='key' type='nominal' />
            <column-instance column='[city (airports.csv1)]' derivation='None' name='[none:city (airports.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]' direction='DESC' using='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:ArrDelay:qk]' />
          <slices>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]</column>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#1170aa' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:ArrDelay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#1170aa' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:DepDelay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#1170aa' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]</rows>
        <cols>([federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:ArrDelay:qk] + [federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:DepDelay:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Avg Arr &amp; DepDelay-PerMonth'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>The trends of average of Dep Delay and average of Arr Delay for each Month. The data is filtered on OrginCity, DestinationCity and CarrierName.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2008' name='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs' />
          </datasources>
          <datasource-dependencies datasource='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs'>
            <column caption='Arr Delay' datatype='integer' name='[ArrDelay]' role='measure' type='quantitative' />
            <column caption='ArrDelayFlag' datatype='integer' name='[Calculation_275564047012425728]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([ArrDelay]&gt;0,1,0)' />
            </column>
            <column caption='DepartureDelayFlag' datatype='integer' name='[Calculation_275564047012651009]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([DepDelay]&gt;0,1,0)' />
            </column>
            <column caption='Dep Delay' datatype='integer' name='[DepDelay]' role='measure' type='quantitative' />
            <column caption='CarrierName' datatype='string' name='[Description]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Distance]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <column-instance column='[ArrDelay]' derivation='Avg' name='[avg:ArrDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DepDelay]' derivation='Avg' name='[avg:DepDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Distance]' derivation='Avg' name='[avg:Distance:qk]' pivot='key' type='quantitative' />
            <column caption='DestinationCity' datatype='string' name='[city (airports.csv1)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='OrginCity' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[Description]' derivation='None' name='[none:Description:nk]' pivot='key' type='nominal' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:qk]' pivot='key' type='quantitative' />
            <column-instance column='[city (airports.csv1)]' derivation='None' name='[none:city (airports.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_275564047012425728]' derivation='Sum' name='[sum:Calculation_275564047012425728:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_275564047012651009]' derivation='Sum' name='[sum:Calculation_275564047012651009:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Description:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]</column>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]</column>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:DepDelay:qk]' scope='rows' value='Avg. Departure Delay' />
            <format attr='subtitle' class='0' field='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:DepDelay:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:DepDelay:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:ArrDelay:qk]' scope='rows' value='Avg. Arrival Delay' />
            <format attr='subtitle' class='0' field='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:ArrDelay:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:ArrDelay:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:Distance:qk]' />
              <lod column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Calculation_275564047012425728:qk]' />
              <lod column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Calculation_275564047012651009:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#1170aa' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='142' />
                <format attr='maxheight' value='142' />
                <format attr='minwidth' value='755' />
                <format attr='maxwidth' value='755' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:DepDelay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:Distance:qk]' />
              <lod column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Calculation_275564047012425728:qk]' />
              <lod column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Calculation_275564047012651009:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#1170aa' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:ArrDelay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:Distance:qk]' />
              <lod column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Calculation_275564047012425728:qk]' />
              <lod column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Calculation_275564047012651009:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#1170aa' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:DepDelay:qk] + [federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:ArrDelay:qk])</rows>
        <cols>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Month:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Avg. Arr &amp; Dep Delay vs Distance-PerCarrier'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2008' name='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs' />
          </datasources>
          <datasource-dependencies datasource='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs'>
            <column caption='Arr Delay' datatype='integer' name='[ArrDelay]' role='measure' type='quantitative' />
            <column caption='Dep Delay' datatype='integer' name='[DepDelay]' role='measure' type='quantitative' />
            <column caption='CarrierName' datatype='string' name='[Description]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Distance]' role='measure' type='quantitative' />
            <column-instance column='[ArrDelay]' derivation='Avg' name='[avg:ArrDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DepDelay]' derivation='Avg' name='[avg:DepDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Distance]' derivation='Avg' name='[avg:Distance:qk]' pivot='key' type='quantitative' />
            <column caption='DestinationCity' datatype='string' name='[city (airports.csv1)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='OrginCity' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[Description]' derivation='None' name='[none:Description:nk]' pivot='key' type='nominal' />
            <column-instance column='[city (airports.csv1)]' derivation='None' name='[none:city (airports.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]</column>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='629' />
                <format attr='maxwidth' value='629' />
                <format attr='minheight' value='203' />
                <format attr='maxheight' value='203' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:ArrDelay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:DepDelay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>([federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:ArrDelay:qk] + [federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:DepDelay:qk])</rows>
        <cols>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:Distance:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Avg. OtherDelaysPerMonth'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>The trends of average of NAS Delay, average of Security Delay, average of Carrier Delay and average of Weather Delay for Month. The data is filtered on OrginCity, DestinationCity and CarrierName.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2008' name='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs' />
          </datasources>
          <datasource-dependencies datasource='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs'>
            <column caption='Carrier Delay' datatype='integer' name='[CarrierDelay]' role='measure' type='quantitative' />
            <column caption='CarrierName' datatype='string' name='[Description]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <column caption='NAS Delay' datatype='integer' name='[NASDelay]' role='dimension' type='ordinal' />
            <column caption='Security Delay' datatype='integer' name='[SecurityDelay]' role='measure' type='quantitative' />
            <column caption='Weather Delay' datatype='integer' name='[WeatherDelay]' role='measure' type='quantitative' />
            <column-instance column='[CarrierDelay]' derivation='Avg' name='[avg:CarrierDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NASDelay]' derivation='Avg' name='[avg:NASDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SecurityDelay]' derivation='Avg' name='[avg:SecurityDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[WeatherDelay]' derivation='Avg' name='[avg:WeatherDelay:qk]' pivot='key' type='quantitative' />
            <column caption='DestinationCity' datatype='string' name='[city (airports.csv1)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='OrginCity' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[Description]' derivation='None' name='[none:Description:nk]' pivot='key' type='nominal' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:qk]' pivot='key' type='quantitative' />
            <column-instance column='[city (airports.csv1)]' derivation='None' name='[none:city (airports.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Description:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]</column>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]</column>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:CarrierDelay:qk]' scope='rows' value='Avg. Carrier Delay' />
            <format attr='subtitle' class='0' field='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:CarrierDelay:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:CarrierDelay:qk]' scope='rows' value='true' />
            <format attr='height' field='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Month:qk]' value='32' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#1170aa' />
                <format attr='mark-markers-mode' value='none' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='737' />
                <format attr='maxwidth' value='737' />
                <format attr='minheight' value='169' />
                <format attr='maxheight' value='169' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:NASDelay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#1170aa' />
                <format attr='mark-markers-mode' value='none' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:SecurityDelay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#1170aa' />
                <format attr='mark-markers-mode' value='none' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:CarrierDelay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#1170aa' />
                <format attr='mark-markers-mode' value='none' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:WeatherDelay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#1170aa' />
                <format attr='mark-markers-mode' value='none' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:NASDelay:qk] + ([federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:SecurityDelay:qk] + ([federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:CarrierDelay:qk] + [federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:WeatherDelay:qk])))</rows>
        <cols>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Month:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='AvgAirtime vs Avg. Arr&amp;DepDelay-PerCarrier'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2008' name='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs' />
          </datasources>
          <datasource-dependencies datasource='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs'>
            <column caption='Air Time' datatype='integer' name='[AirTime]' role='measure' type='quantitative' />
            <column caption='Arr Delay' datatype='integer' name='[ArrDelay]' role='measure' type='quantitative' />
            <column caption='Dep Delay' datatype='integer' name='[DepDelay]' role='measure' type='quantitative' />
            <column caption='CarrierName' datatype='string' name='[Description]' role='dimension' type='nominal' />
            <column-instance column='[Description]' derivation='Attribute' name='[attr:Description:nk]' pivot='key' type='nominal' />
            <column-instance column='[AirTime]' derivation='Avg' name='[avg:AirTime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ArrDelay]' derivation='Avg' name='[avg:ArrDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DepDelay]' derivation='Avg' name='[avg:DepDelay:qk]' pivot='key' type='quantitative' />
            <column caption='DestinationCity' datatype='string' name='[city (airports.csv1)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='OrginCity' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[Description]' derivation='None' name='[none:Description:nk]' pivot='key' type='nominal' />
            <column-instance column='[city (airports.csv1)]' derivation='None' name='[none:city (airports.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]</column>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]' />
              <tooltip column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[attr:Description:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:ArrDelay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]' />
              <tooltip column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[attr:Description:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:DepDelay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]' />
              <tooltip column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[attr:Description:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:AirTime:qk]</rows>
        <cols>([federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:ArrDelay:qk] + [federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:DepDelay:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='AvgArrDelay-PerCarrierPermonth'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2008' name='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs' />
          </datasources>
          <datasource-dependencies datasource='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs'>
            <column caption='Air Time' datatype='integer' name='[AirTime]' role='measure' type='quantitative' />
            <column caption='Arr Delay' datatype='integer' name='[ArrDelay]' role='measure' type='quantitative' />
            <column caption='CarrierName' datatype='string' name='[Description]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Distance]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <column-instance column='[AirTime]' derivation='Avg' name='[avg:AirTime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ArrDelay]' derivation='Avg' name='[avg:ArrDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Distance]' derivation='Avg' name='[avg:Distance:qk]' pivot='key' type='quantitative' />
            <column caption='DestinationCity' datatype='string' name='[city (airports.csv1)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='OrginCity' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[Description]' derivation='None' name='[none:Description:nk]' pivot='key' type='nominal' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:qk]' pivot='key' type='quantitative' />
            <column-instance column='[city (airports.csv1)]' derivation='None' name='[none:city (airports.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Description:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]</column>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]</column>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]' />
              <lod column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:Distance:qk]' />
              <lod column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:AirTime:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:ArrDelay:qk]</rows>
        <cols>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Month:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='AvgArrivalDelayinMinutes-Orgin-Dest-PerCarrier'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2008' name='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs' />
          </datasources>
          <datasource-dependencies datasource='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs'>
            <column caption='Arr Delay' datatype='integer' name='[ArrDelay]' role='measure' type='quantitative' />
            <column caption='CarrierName' datatype='string' name='[Description]' role='dimension' type='nominal' />
            <column-instance column='[ArrDelay]' derivation='Avg' name='[avg:ArrDelay:qk]' pivot='key' type='quantitative' />
            <column caption='DestinationCity' datatype='string' name='[city (airports.csv1)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='OrginCity' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[Description]' derivation='None' name='[none:Description:nk]' pivot='key' type='nominal' />
            <column-instance column='[city (airports.csv1)]' derivation='None' name='[none:city (airports.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Description:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]' direction='DESC' using='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:ArrDelay:qk]' />
          <sort class='computed' column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]' direction='DESC' using='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:ArrDelay:qk]' />
          <slices>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]</column>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]</column>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:ArrDelay:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#00ff7f</color>
                <color>#16fb88</color>
                <color>#2df892</color>
                <color>#42f49b</color>
                <color>#57f1a4</color>
                <color>#6cedac</color>
                <color>#7feab4</color>
                <color>#92e6bc</color>
                <color>#a5e3c4</color>
                <color>#b7dfcb</color>
                <color>#c8dcd2</color>
                <color>#d9d9d9</color>
                <color>#dcc8c8</color>
                <color>#dfb7b7</color>
                <color>#e3a5a5</color>
                <color>#e69292</color>
                <color>#ea7f7f</color>
                <color>#ed6c6c</color>
                <color>#f15757</color>
                <color>#f44242</color>
                <color>#f82d2d</color>
                <color>#fb1616</color>
                <color>#ff0000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#ffffff' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dashed' />
            <format attr='stroke-color' id='refline1' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:ArrDelay:qk]' />
            </encodings>
            <dropline drop-when='selected' haslabel='false' x-axis='true' y-axis='false' />
            <reference-line axis-column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:ArrDelay:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:ArrDelay:qk]' z-order='1' />
            <reference-line axis-column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:ArrDelay:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-table' value-column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:ArrDelay:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk] / ([federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk] / [federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]))</rows>
        <cols>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:ArrDelay:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='AvgDepDelay-PerCarrier-PerMonth'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2008' name='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs' />
          </datasources>
          <datasource-dependencies datasource='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs'>
            <column caption='Air Time' datatype='integer' name='[AirTime]' role='measure' type='quantitative' />
            <column caption='Dep Delay' datatype='integer' name='[DepDelay]' role='measure' type='quantitative' />
            <column caption='CarrierName' datatype='string' name='[Description]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Distance]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <column-instance column='[AirTime]' derivation='Avg' name='[avg:AirTime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DepDelay]' derivation='Avg' name='[avg:DepDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Distance]' derivation='Avg' name='[avg:Distance:qk]' pivot='key' type='quantitative' />
            <column caption='DestinationCity' datatype='string' name='[city (airports.csv1)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='OrginCity' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[Description]' derivation='None' name='[none:Description:nk]' pivot='key' type='nominal' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:qk]' pivot='key' type='quantitative' />
            <column-instance column='[city (airports.csv1)]' derivation='None' name='[none:city (airports.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Description:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]</column>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]</column>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]' />
              <lod column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:AirTime:qk]' />
              <lod column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:Distance:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:DepDelay:qk]</rows>
        <cols>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Month:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='AvgDepartureDelayinMinutes-Orgin-Dest-PerCarrier'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2008' name='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs' />
          </datasources>
          <datasource-dependencies datasource='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs'>
            <column caption='Arr Delay' datatype='integer' name='[ArrDelay]' role='measure' type='quantitative' />
            <column caption='Dep Delay' datatype='integer' name='[DepDelay]' role='measure' type='quantitative' />
            <column caption='CarrierName' datatype='string' name='[Description]' role='dimension' type='nominal' />
            <column-instance column='[ArrDelay]' derivation='Avg' name='[avg:ArrDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DepDelay]' derivation='Avg' name='[avg:DepDelay:qk]' pivot='key' type='quantitative' />
            <column caption='DestinationCity' datatype='string' name='[city (airports.csv1)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='OrginCity' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[Description]' derivation='None' name='[none:Description:nk]' pivot='key' type='nominal' />
            <column-instance column='[city (airports.csv1)]' derivation='None' name='[none:city (airports.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Description:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]' direction='DESC' using='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:DepDelay:qk]' />
          <sort class='computed' column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]' direction='DESC' using='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:ArrDelay:qk]' />
          <slices>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]</column>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]</column>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:ArrDelay:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#00ff7f</color>
                <color>#16fb88</color>
                <color>#2df892</color>
                <color>#42f49b</color>
                <color>#57f1a4</color>
                <color>#6cedac</color>
                <color>#7feab4</color>
                <color>#92e6bc</color>
                <color>#a5e3c4</color>
                <color>#b7dfcb</color>
                <color>#c8dcd2</color>
                <color>#d9d9d9</color>
                <color>#dcc8c8</color>
                <color>#dfb7b7</color>
                <color>#e3a5a5</color>
                <color>#e69292</color>
                <color>#ea7f7f</color>
                <color>#ed6c6c</color>
                <color>#f15757</color>
                <color>#f44242</color>
                <color>#f82d2d</color>
                <color>#fb1616</color>
                <color>#ff0000</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:DepDelay:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#00ff7f</color>
                <color>#16fb88</color>
                <color>#2df892</color>
                <color>#42f49b</color>
                <color>#57f1a4</color>
                <color>#6cedac</color>
                <color>#7feab4</color>
                <color>#92e6bc</color>
                <color>#a5e3c4</color>
                <color>#b7dfcb</color>
                <color>#c8dcd2</color>
                <color>#d9d9d9</color>
                <color>#dcc8c8</color>
                <color>#dfb7b7</color>
                <color>#e3a5a5</color>
                <color>#e69292</color>
                <color>#ea7f7f</color>
                <color>#ed6c6c</color>
                <color>#f15757</color>
                <color>#f44242</color>
                <color>#f82d2d</color>
                <color>#fb1616</color>
                <color>#ff0000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#ffffff' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dashed' />
            <format attr='stroke-color' id='refline1' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:DepDelay:qk]' />
            </encodings>
            <dropline drop-when='selected' haslabel='false' x-axis='true' y-axis='false' />
            <reference-line axis-column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:DepDelay:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:DepDelay:qk]' z-order='1' />
            <reference-line axis-column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:DepDelay:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-table' value-column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:DepDelay:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk] / ([federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk] / [federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]))</rows>
        <cols>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:DepDelay:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='DestAirport-AvgArrDelay'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt; from &lt;</run>
            <run fontalignment='1'>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]</run>
            <run fontalignment='1'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2008' name='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs'>
            <column caption='Arr Delay' datatype='integer' name='[ArrDelay]' role='measure' type='quantitative' />
            <column caption='CarrierName' datatype='string' name='[Description]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[ArrDelay]' derivation='Avg' name='[avg:ArrDelay:qk]' pivot='key' type='quantitative' />
            <column caption='DestinationCity' datatype='string' name='[city (airports.csv1)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='OrginCity' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='DestinationCountry' datatype='string' name='[country (airports.csv1)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Description]' derivation='None' name='[none:Description:nk]' pivot='key' type='nominal' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:ok]' pivot='key' type='ordinal' />
            <column-instance column='[city (airports.csv1)]' derivation='None' name='[none:city (airports.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[country (airports.csv1)]' derivation='None' name='[none:country (airports.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[state (airports.csv1)]' derivation='None' name='[none:state (airports.csv1):nk]' pivot='key' type='nominal' />
            <column caption='Dest_State' datatype='string' name='[state (airports.csv1)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[Action (DestinationCity)]'>
            <groupfilter function='level-members' level='[city (airports.csv1)]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Description:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Month:ok]' filter-group='3'>
            <groupfilter from='1' function='range' level='[none:Month:ok]' to='12' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]</column>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]</column>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Month:ok]</column>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]</column>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[Action (DestinationCity)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' field='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Number of Records:qk]' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Number of Records:qk]' value='0' />
            <format attr='text-format' field='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Number of Records:qk]' value='n0.00' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='6.2792272362375172' field='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:ArrDelay:qk]' max='10.265990639625585' min='2.2924638328494504' palette='red_10_0' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:ArrDelay:qk]' />
              <size column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Number of Records:qk]' />
              <lod column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:country (airports.csv1):nk]' />
              <lod column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:state (airports.csv1):nk]' />
              <lod column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7251380681991577' />
                <format attr='has-halo' value='true' />
                <format attr='halo-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[Latitude (generated)]</rows>
        <cols>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='EarlyArrivalAfterLateDeparture-PerCarrier'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2008' name='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs' />
          </datasources>
          <datasource-dependencies datasource='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs'>
            <column caption='Arr Delay' datatype='integer' name='[ArrDelay]' role='measure' type='quantitative' />
            <column caption='EarlyArrivalButLateDeparture' datatype='integer' name='[Calculation_296674673098059777]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ([ArrDelay]&lt;=0) AND ([DepDelay]&gt;0) THEN 1 ELSE 0 END' />
            </column>
            <column caption='EarlyArrLateDep' datatype='real' default-format='p0.00%' name='[Calculation_296674673099108354]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_296674673098059777])/ SUM([Number of Records])' />
            </column>
            <column caption='Dep Delay' datatype='integer' name='[DepDelay]' role='measure' type='quantitative' />
            <column caption='CarrierName' datatype='string' name='[Description]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='DestinationCity' datatype='string' name='[city (airports.csv1)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='OrginCity' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[Description]' derivation='None' name='[none:Description:nk]' pivot='key' type='nominal' />
            <column-instance column='[city (airports.csv1)]' derivation='None' name='[none:city (airports.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_296674673099108354]' derivation='User' name='[usr:Calculation_296674673099108354:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]' direction='DESC' using='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[usr:Calculation_296674673099108354:qk]' />
          <slices>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]</column>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[usr:Calculation_296674673099108354:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#a3cce9' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]</rows>
        <cols>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[usr:Calculation_296674673099108354:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='FlightCancellationReasons-PerCarrier'>
      <table>
        <view>
          <datasources>
            <datasource caption='2008' name='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs' />
          </datasources>
          <datasource-dependencies datasource='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs'>
            <column caption='Cancellation Reason' datatype='string' name='[Calculation_275564049101848580]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ([CancellationCode])=&quot;A&quot; THEN &quot;Carrier&quot;&#13;&#10;ELSEIF ([CancellationCode])=&quot;B&quot; THEN &quot;weather&quot;&#13;&#10;ELSEIF ([CancellationCode])=&quot;C&quot; THEN &quot;NAS&quot;&#13;&#10;ELSEIF ([CancellationCode])=&quot;D&quot; THEN &quot;security&quot;&#13;&#10;ELSE &quot;Unknown&quot; END' />
            </column>
            <column caption='Cancellation Code' datatype='string' name='[CancellationCode]' role='dimension' type='nominal' />
            <column caption='CarrierName' datatype='string' name='[Description]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='DestinationCity' datatype='string' name='[city (airports.csv1)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='OrginCity' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[Calculation_275564049101848580]' derivation='None' name='[none:Calculation_275564049101848580:nk]' pivot='key' type='nominal' />
            <column-instance column='[Description]' derivation='None' name='[none:Description:nk]' pivot='key' type='nominal' />
            <column-instance column='[city (airports.csv1)]' derivation='None' name='[none:city (airports.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Calculation_275564049101848580:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_275564049101848580:nk]' member='&quot;Carrier&quot;' />
              <groupfilter function='member' level='[none:Calculation_275564049101848580:nk]' member='&quot;NAS&quot;' />
              <groupfilter function='member' level='[none:Calculation_275564049101848580:nk]' member='&quot;security&quot;' />
              <groupfilter function='member' level='[none:Calculation_275564049101848580:nk]' member='&quot;weather&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Calculation_275564049101848580:nk]' direction='DESC' using='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Number of Records:qk]' />
          <filter class='categorical' column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Description:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Calculation_275564049101848580:nk]</column>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]</column>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]</column>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Calculation_275564049101848580:nk]' value='120' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Calculation_275564049101848580:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#75a1c7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk] / [federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Calculation_275564049101848580:nk])</rows>
        <cols>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Number of Records:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='FlightDiversionBetweenCities-PerCarrier'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2008' name='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs' />
          </datasources>
          <datasource-dependencies datasource='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs'>
            <column caption='CarrierName' datatype='string' name='[Description]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Diverted]' role='measure' type='quantitative' />
            <column caption='DestinationCity' datatype='string' name='[city (airports.csv1)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='OrginCity' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[Description]' derivation='None' name='[none:Description:nk]' pivot='key' type='nominal' />
            <column-instance column='[city (airports.csv1)]' derivation='None' name='[none:city (airports.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[Diverted]' derivation='Sum' name='[sum:Diverted:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Description:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]' direction='DESC' using='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Diverted:qk]' />
          <slices>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]</column>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]</column>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Diverted:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Diverted:qk]' max='63' min='0' num-steps='2' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ff4534</color>
                <color>#f86153</color>
                <color>#f27c71</color>
                <color>#ec958e</color>
                <color>#e5ada8</color>
                <color>#dfc4c1</color>
                <color>#d9d9d9</color>
                <color>#d0adad</color>
                <color>#c88585</color>
                <color>#c06060</color>
                <color>#b73d3d</color>
                <color>#af1d1d</color>
                <color>#a70000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' id='refline0' value='3' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='stroke-color' id='refline0' value='#0000ff60' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Diverted:qk]' value='NumberOfInstancesofDiversion' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Diverted:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Diverted:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Diverted:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk] / ([federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk] / [federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]))</rows>
        <cols>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Diverted:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='NumberOfDelaysPerMonth'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>The trends of Number of instances of ArrDelay and Number of instances of DepartureDelay for each Month. The data is filtered on DestinationCity and OrginCity.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2008' name='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs' />
          </datasources>
          <datasource-dependencies datasource='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs'>
            <column caption='Arr Delay' datatype='integer' name='[ArrDelay]' role='measure' type='quantitative' />
            <column caption='ArrDelayFlag' datatype='integer' name='[Calculation_275564047012425728]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([ArrDelay]&gt;0,1,0)' />
            </column>
            <column caption='DepartureDelayFlag' datatype='integer' name='[Calculation_275564047012651009]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([DepDelay]&gt;0,1,0)' />
            </column>
            <column caption='Dep Delay' datatype='integer' name='[DepDelay]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <column caption='DestinationCity' datatype='string' name='[city (airports.csv1)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='OrginCity' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:qk]' pivot='key' type='quantitative' />
            <column-instance column='[city (airports.csv1)]' derivation='None' name='[none:city (airports.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_275564047012425728]' derivation='Sum' name='[sum:Calculation_275564047012425728:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_275564047012651009]' derivation='Sum' name='[sum:Calculation_275564047012651009:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]</column>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Calculation_275564047012425728:qk]' scope='rows' value='NumberOfArrivalDelays' />
            <format attr='subtitle' class='0' field='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Calculation_275564047012425728:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Calculation_275564047012425728:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Calculation_275564047012651009:qk]' scope='rows' value='NumberOfDepartureDelays' />
            <format attr='subtitle' class='0' field='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Calculation_275564047012651009:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Calculation_275564047012651009:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Calculation_275564047012425728:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Calculation_275564047012651009:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Calculation_275564047012425728:qk] + [federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Calculation_275564047012651009:qk])</rows>
        <cols>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Month:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='OnTimeArrivalPerformance-PerCarrier'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2008' name='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs' />
          </datasources>
          <datasource-dependencies datasource='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs'>
            <column caption='Arr Delay' datatype='integer' name='[ArrDelay]' role='measure' type='quantitative' />
            <column caption='OnTimeArrival' datatype='real' default-format='p0.00%' name='[Calculation_106397589540847618]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_275564049490145285])/SUM([Number of Records])' />
            </column>
            <column caption='OnTime-ArrivalFlag' datatype='integer' name='[Calculation_275564049490145285]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='IIF([ArrDelay]&lt;=0,1,0)' />
            </column>
            <column caption='CarrierName' datatype='string' name='[Description]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='DestinationCity' datatype='string' name='[city (airports.csv1)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='OrginCity' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[Description]' derivation='None' name='[none:Description:nk]' pivot='key' type='nominal' />
            <column-instance column='[city (airports.csv1)]' derivation='None' name='[none:city (airports.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_106397589540847618]' derivation='User' name='[usr:Calculation_106397589540847618:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]' direction='DESC' using='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[usr:Calculation_106397589540847618:qk]' />
          <slices>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]</column>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[usr:Calculation_106397589540847618:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[usr:Calculation_106397589540847618:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>CarrierName:&#9;</run>
                <run bold='true'>&lt;[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% of OnTime-Arrivals:&#9;</run>
                <run bold='true'>&lt;[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[pcto:sum:Calculation_275564049490145285:qk:2]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#a3cce9' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]</rows>
        <cols onLeft='true'>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[usr:Calculation_106397589540847618:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='OnTimeDeparturePerformance-PerCarrier'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2008' name='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs' />
          </datasources>
          <datasource-dependencies datasource='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs'>
            <column caption='Dep Delay' datatype='integer' name='[DepDelay]' role='measure' type='quantitative' />
            <column caption='CarrierName' datatype='string' name='[Description]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='OnTime-DepartureFlag' datatype='integer' name='[OnTime-ArrivalFlag (copy)]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='IIF([DepDelay]&lt;=0,1,0)' />
            </column>
            <column caption='OnTimeDeparture' datatype='real' default-format='p0.00%' name='[OnTimeArrival (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([OnTime-ArrivalFlag (copy)])/SUM([Number of Records])' />
            </column>
            <column caption='DestinationCity' datatype='string' name='[city (airports.csv1)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='OrginCity' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[Description]' derivation='None' name='[none:Description:nk]' pivot='key' type='nominal' />
            <column-instance column='[city (airports.csv1)]' derivation='None' name='[none:city (airports.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[OnTimeArrival (copy)]' derivation='User' name='[usr:OnTimeArrival (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]' direction='DESC' using='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[usr:OnTimeArrival (copy):qk]' />
          <slices>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]</column>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[usr:OnTimeArrival (copy):qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[usr:OnTimeArrival (copy):qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>CarrierName:&#9;</run>
                <run bold='true'>&lt;[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% of OnTime-Arrivals:&#9;</run>
                <run bold='true'>&lt;[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[pcto:sum:Calculation_275564049490145285:qk:2]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#a3cce9' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]</rows>
        <cols onLeft='true'>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[usr:OnTimeArrival (copy):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='PercentageofDistanceCovered-PerCarrier'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2008' name='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs' />
          </datasources>
          <datasource-dependencies datasource='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs'>
            <column caption='CarrierName' datatype='string' name='[Description]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Distance]' role='measure' type='quantitative' />
            <column-instance column='[Description]' derivation='Attribute' name='[attr:Description:nk]' pivot='key' type='nominal' />
            <column caption='DestinationCity' datatype='string' name='[city (airports.csv1)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='OrginCity' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[Description]' derivation='None' name='[none:Description:nk]' pivot='key' type='nominal' />
            <column-instance column='[city (airports.csv1)]' derivation='None' name='[none:city (airports.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[Distance]' derivation='Sum' name='[pcto:sum:Distance:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <sort class='manual' column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;JetBlue Airways&quot;</bucket>
              <bucket>&quot;Delta Air Lines Inc.&quot;</bucket>
              <bucket>&quot;American Airlines Inc.&quot;</bucket>
              <bucket>&quot;United Air Lines Inc.&quot;</bucket>
              <bucket>&quot;Comair Inc.&quot;</bucket>
              <bucket>&quot;Continental Air Lines Inc.&quot;</bucket>
              <bucket>&quot;American Eagle Airlines Inc.&quot;</bucket>
              <bucket>&quot;US Airways Inc. (Merged with America West 9/05. Reporting for both starting 10/07.)&quot;</bucket>
              <bucket>&quot;Northwest Airlines Inc.&quot;</bucket>
              <bucket>&quot;Frontier Airlines Inc.&quot;</bucket>
              <bucket>&quot;Pinnacle Airlines Inc.&quot;</bucket>
              <bucket>&quot;AirTran Airways Corporation&quot;</bucket>
              <bucket>&quot;Mesa Airlines Inc.&quot;</bucket>
              <bucket>&quot;Expressjet Airlines Inc.&quot;</bucket>
              <bucket>&quot;Atlantic Southeast Airlines&quot;</bucket>
              <bucket>&quot;Southwest Airlines Co.&quot;</bucket>
              <bucket>&quot;Skywest Airlines Inc.&quot;</bucket>
              <bucket>&quot;Alaska Airlines Inc.&quot;</bucket>
              <bucket>&quot;Hawaiian Airlines Inc.&quot;</bucket>
              <bucket>&quot;Aloha Airlines Inc.&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]</column>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[attr:Description:nk]' />
              <text column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[pcto:sum:Distance:qk:2]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Unique Carrier:&#9;</run>
                <run bold='true'>&lt;[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% of Total Distance Covered&#9;</run>
                <run bold='true'>&lt;[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[pcto:sum:Distance:qk:2]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#a3cce9' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]</rows>
        <cols>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[pcto:sum:Distance:qk:2]</cols>
      </table>
    </worksheet>
    <worksheet name='TotalExternalDelays vs Arr &amp; Dep Delay-PerCarrier'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2008' name='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs' />
          </datasources>
          <datasource-dependencies datasource='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs'>
            <column caption='Arr Delay' datatype='integer' name='[ArrDelay]' role='measure' type='quantitative' />
            <column caption='TotalDelayFactors' datatype='real' name='[Calculation_106397589529841664]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([NASDelay]+[SecurityDelay]+[LateAircraftDelay]+[SecurityDelay])' />
            </column>
            <column caption='Dep Delay' datatype='integer' name='[DepDelay]' role='measure' type='quantitative' />
            <column caption='CarrierName' datatype='string' name='[Description]' role='dimension' type='nominal' />
            <column caption='Late Aircraft Delay' datatype='integer' name='[LateAircraftDelay]' role='measure' type='quantitative' />
            <column caption='NAS Delay' datatype='integer' name='[NASDelay]' role='dimension' type='ordinal' />
            <column caption='Security Delay' datatype='integer' name='[SecurityDelay]' role='measure' type='quantitative' />
            <column caption='Unique Carrier' datatype='string' name='[UniqueCarrier]' role='dimension' type='nominal' />
            <column-instance column='[ArrDelay]' derivation='Avg' name='[avg:ArrDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DepDelay]' derivation='Avg' name='[avg:DepDelay:qk]' pivot='key' type='quantitative' />
            <column caption='DestinationCity' datatype='string' name='[city (airports.csv1)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='OrginCity' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[Description]' derivation='None' name='[none:Description:nk]' pivot='key' type='nominal' />
            <column-instance column='[UniqueCarrier]' derivation='None' name='[none:UniqueCarrier:nk]' pivot='key' type='nominal' />
            <column-instance column='[city (airports.csv1)]' derivation='None' name='[none:city (airports.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_106397589529841664]' derivation='User' name='[usr:Calculation_106397589529841664:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]</column>
            <column>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='684' />
                <format attr='maxwidth' value='684' />
                <format attr='minheight' value='203' />
                <format attr='maxheight' value='203' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:ArrDelay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:UniqueCarrier:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:DepDelay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:DepDelay:qk] + [federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:ArrDelay:qk])</rows>
        <cols>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[usr:Calculation_106397589529841664:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Airtime-DistanceTravlled vs Delays_Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='2008' name='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs' />
      </datasources>
      <datasource-dependencies datasource='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs'>
        <column caption='DestinationCity' datatype='string' name='[city (airports.csv1)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column caption='OrginCity' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column-instance column='[city (airports.csv1)]' derivation='None' name='[none:city (airports.csv1):nk]' pivot='key' type='nominal' />
        <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='1' name='AvgAirtime vs Avg. Arr&amp;DepDelay-PerCarrier' w='41200' x='42000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='9' name='Avg. Arr &amp; Dep Delay vs Distance-PerCarrier' w='82400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='10' name='TotalExternalDelays vs Arr &amp; Dep Delay-PerCarrier' w='41200' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='6500' id='6' mode='dropdown' name='AvgAirtime vs Avg. Arr&amp;DepDelay-PerCarrier' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]' type='filter' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='7' mode='checkdropdown' name='AvgAirtime vs Avg. Arr&amp;DepDelay-PerCarrier' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]' type='filter' values='relevant' w='16000' x='83200' y='7500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48250' id='8' name='AvgAirtime vs Avg. Arr&amp;DepDelay-PerCarrier' pane-specification-id='1' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]' type='color' w='16000' x='83200' y='14000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Avg.FlightDelays&amp;NumberOfFlights_Dashboard'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='2008' name='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs' />
      </datasources>
      <datasource-dependencies datasource='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs'>
        <column caption='CarrierName' datatype='string' name='[Description]' role='dimension' type='nominal' />
        <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
        <column caption='DestinationCity' datatype='string' name='[city (airports.csv1)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column caption='OrginCity' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column-instance column='[Description]' derivation='None' name='[none:Description:nk]' pivot='key' type='nominal' />
        <column-instance column='[Month]' derivation='None' name='[none:Month:ok]' pivot='key' type='ordinal' />
        <column-instance column='[city (airports.csv1)]' derivation='None' name='[none:city (airports.csv1):nk]' pivot='key' type='nominal' />
        <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97298' id='5' param='horz' type='layout-flow' w='98614' x='693' y='1351'>
            <zone h='97298' id='3' type='layout-basic' w='84761' x='693' y='1351'>
              <zone h='53210' id='1' name='DestAirport-AvgArrDelay' w='84761' x='693' y='1351'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='44088' id='10' name='#ofFlights-Ontimarrivals&amp;DeparturestoDestination' w='84761' x='693' y='54561'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='97298' id='4' is-fixed='true' param='vert' type='layout-flow' w='13853' x='85454' y='1351'>
              <zone h='8783' id='6' mode='dropdown' name='DestAirport-AvgArrDelay' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]' type='filter' w='13853' x='85454' y='1351'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8783' id='7' mode='checkdropdown' name='DestAirport-AvgArrDelay' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]' type='filter' values='relevant' w='13853' x='85454' y='10134'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='10979' id='8' name='DestAirport-AvgArrDelay' pane-specification-id='0' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:ArrDelay:qk]' type='color' w='13853' x='85454' y='18917'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='17905' id='9' name='DestAirport-AvgArrDelay' pane-specification-id='0' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Number of Records:qk]' type='size' w='13853' x='85454' y='29896'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8783' id='11' mode='checkdropdown' name='#ofFlights-Ontimarrivals&amp;DeparturestoDestination' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]' type='filter' values='relevant' w='13853' x='85454' y='47801'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8783' id='12' mode='checkdropdown' name='#ofFlights-Ontimarrivals&amp;DeparturestoDestination' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Month:ok]' type='filter' values='relevant' w='13853' x='85454' y='56584'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='10979' id='13' name='#ofFlights-Ontimarrivals&amp;DeparturestoDestination' pane-specification-id='0' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Number of Records:qk]' type='color' w='13853' x='85454' y='65367'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='DelaysAcrossDifferentMonths_Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='2008' name='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs' />
      </datasources>
      <datasource-dependencies datasource='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs'>
        <column caption='CarrierName' datatype='string' name='[Description]' role='dimension' type='nominal' />
        <column caption='DestinationCity' datatype='string' name='[city (airports.csv1)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column caption='OrginCity' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column-instance column='[Description]' derivation='None' name='[none:Description:nk]' pivot='key' type='nominal' />
        <column-instance column='[city (airports.csv1)]' derivation='None' name='[none:city (airports.csv1):nk]' pivot='key' type='nominal' />
        <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='43000' x='800' y='1000'>
            <zone fixed-size='148' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='43000' x='800' y='1000'>
              <zone fixed-size='375' h='47875' id='1' is-fixed='true' name='Avg Arr &amp; DepDelay-PerMonth' show-caption='true' show-title='false' w='43000' x='800' y='1000'>
                <layout-cache has-max-size-h='true' maxheight='382' minheight='382' type-h='scalable' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='50125' id='10' name='NumberOfDelaysPerMonth' show-caption='true' show-title='false' w='43000' x='800' y='48875'>
                <layout-cache minheight='315' type-h='scalable' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='98000' id='9' name='Avg. OtherDelaysPerMonth' show-caption='true' show-title='false' w='55400' x='43800' y='1000'>
            <layout-cache minheight='499' type-h='scalable' type-w='fixed' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='5875' id='8' mode='checkdropdown' name='Avg Arr &amp; DepDelay-PerMonth' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]' type='filter' values='relevant' w='16800' x='84400' y='16625'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='6125' id='7' mode='checkdropdown' name='Avg Arr &amp; DepDelay-PerMonth' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]' type='filter' values='relevant' w='17500' x='83600' y='4750'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='3625' id='6' mode='dropdown' name='Avg Arr &amp; DepDelay-PerMonth' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]' type='filter' w='18200' x='83200' y='1125'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Diversion&amp;CancellationMetrics_Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='2008' name='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs' />
      </datasources>
      <datasource-dependencies datasource='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs'>
        <column caption='Cancellation Reason' datatype='string' name='[Calculation_275564049101848580]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='IF ([CancellationCode])=&quot;A&quot; THEN &quot;Carrier&quot;&#13;&#10;ELSEIF ([CancellationCode])=&quot;B&quot; THEN &quot;weather&quot;&#13;&#10;ELSEIF ([CancellationCode])=&quot;C&quot; THEN &quot;NAS&quot;&#13;&#10;ELSEIF ([CancellationCode])=&quot;D&quot; THEN &quot;security&quot;&#13;&#10;ELSE &quot;Unknown&quot; END' />
        </column>
        <column caption='DestinationCity' datatype='string' name='[city (airports.csv1)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column caption='OrginCity' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column-instance column='[Calculation_275564049101848580]' derivation='None' name='[none:Calculation_275564049101848580:nk]' pivot='key' type='nominal' />
        <column-instance column='[city (airports.csv1)]' derivation='None' name='[none:city (airports.csv1):nk]' pivot='key' type='nominal' />
        <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='1' name='#ofFlightsDiverted&amp;Cancelled' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='8' name='FlightCancellationReasons-PerCarrier' w='82400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='6500' id='6' mode='dropdown' name='#ofFlightsDiverted&amp;Cancelled' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]' type='filter' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='7' mode='checkdropdown' name='#ofFlightsDiverted&amp;Cancelled' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]' type='filter' values='relevant' w='16000' x='83200' y='7500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='18250' id='9' name='FlightCancellationReasons-PerCarrier' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Calculation_275564049101848580:nk]' type='filter' w='16000' x='83200' y='14000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='OnTimePerformance_Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='2008' name='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs' />
      </datasources>
      <datasource-dependencies datasource='federated.1plevgf0i4o8ik1b4p8mc1o1ptfs'>
        <column caption='DestinationCity' datatype='string' name='[city (airports.csv1)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column caption='OrginCity' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column-instance column='[city (airports.csv1)]' derivation='None' name='[none:city (airports.csv1):nk]' pivot='key' type='nominal' />
        <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='98000' id='1' name='OnTimeArrivalPerformance-PerCarrier' w='40500' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98000' id='8' name='OnTimeDeparturePerformance-PerCarrier' w='41900' x='41300' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='6500' id='6' mode='dropdown' name='OnTimeArrivalPerformance-PerCarrier' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]' type='filter' values='relevant' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='7' mode='checkdropdown' name='OnTimeArrivalPerformance-PerCarrier' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]' type='filter' values='relevant' w='16000' x='83200' y='7500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='349' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type='layout-flow' w='98426' x='787' y='830'>
            <zone h='3423' id='3' type='title' w='98426' x='787' y='830' />
            <zone fixed-size='143' h='14834' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98426' x='787' y='4253' />
            <zone h='80083' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98426' x='787' y='19087'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Flights are one of the fastest ways to travel from one place to another. In this visual we can see the on-time  arrival performance of the flights based on the orgin and destination city. This is a key metric for airline companies as well as for the customers to determine the efficiency of airlines.' captured-sheet='OnTimeArrivalPerformance-PerCarrier' id='1' />
                  <story-point caption='Here we can that the average arrival and Departure delays for flights during different months of the year. Also, we have other types of delays mapped across different months of the year. It can be seen that Arrival and Departure delay is at peaks during July, August and December. Other delays like Security and weather delay doesn&apos;t seem to play a mjor role in affecting the Arrival and Departure delay. It can be seen that NAS Delay is quite high during June, July time. Whereas, carrier delay is high in the month of August. All these observations are for Jet blue flight from New york to different locations. ' captured-sheet='DelaysAcrossDifferentMonths_Dashboard' id='2'>
                    <capturedDeltas>
                      <worksheet name='Avg. OtherDelaysPerMonth'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:NASDelay:qk]' field-type='quantitative' max='78.96894054318571' min='0.0' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Month:qk]' field-type='quantitative' max='14' min='1' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='In this visual , we can see the correlation between airtime and arr and departure delays. It can be seen that as the airtime increases the delay is also increasing. Mesa airlines has the highest avg. Delay even though the airtime is less than many other carriers. The relationship between Total other delays and arrival and departure delays is also similar. As the other delay factors increase the average departure and arrival delay also increases. Trend line of realtion between distance covered and arrival and departure delays seems very flat.' captured-sheet='Airtime-DistanceTravlled vs Delays_Dashboard' id='4' />
                  <story-point caption='This visual here is showing the average departure and arrival delays for different carriers between selected orgin and all the relevant destinations. It seems that ' captured-sheet='ArrDelay-DepDelay-Per Carrier' id='3'>
                    <capturedDeltas>
                      <worksheet name='ArrDelay-DepDelay-Per Carrier'>
                        <filter class='categorical' column='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]'>
                          <groupfilter function='level-members' level='[none:Description:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='In here we can see the number of flights cancelled between any selected origin and destination airports. Also we can get an idea of flight services that have been cancelled for each aircraft carrier for the selected origin and destination airport.  There are insights on the different reasons for cancellation of flights for each carrier.' captured-sheet='Diversion&amp;CancellationMetrics_Dashboard' id='7' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Avg Arr &amp; DepDelay-PerMonth'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]' type='filter' values='relevant' />
            <card mode='checkdropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Dest:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Month:qk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Origin:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:UniqueCarrier:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='AvgDepDelay-PerCarrier-PerMonth'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]' type='filter' values='relevant' />
            <card mode='checkdropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Dest:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Month:qk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Origin:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:UniqueCarrier:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='AvgArrDelay-PerCarrierPermonth'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]' type='filter' values='relevant' />
            <card mode='checkdropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Month:qk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Origin:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:UniqueCarrier:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Avg. OtherDelaysPerMonth'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]' type='filter' values='relevant' />
            <card mode='dropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:DayofMonth:qk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Month:qk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:NASDelay:ok]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Origin:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='NumberOfDelaysPerMonth'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[:Measure Names]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Month:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='ArrDelay-DepDelay-Per Carrier'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Origin:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:UniqueCarrier:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='AvgArrivalDelayinMinutes-Orgin-Dest-PerCarrier'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]' type='filter' values='relevant' />
            <card mode='checkdropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]' type='filter' values='relevant' />
            <card pane-specification-id='0' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:ArrDelay:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:ArrDelay:qk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Dest:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Origin:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:UniqueCarrier:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[usr:Calculation_372672918161035264:nk:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='AvgDepartureDelayinMinutes-Orgin-Dest-PerCarrier'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]' type='filter' values='relevant' />
            <card mode='checkdropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]' type='filter' values='relevant' />
            <card pane-specification-id='0' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:DepDelay:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:DepDelay:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]</field>
                    <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]</field>
                    <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:ArrDelay:qk]</field>
                  <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:DepDelay:qk]</field>
                  <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]</field>
                  <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]</field>
                  <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>24.871742112482853</value>
                <value>26.534518113465481</value>
                <value>&quot;JetBlue Airways&quot;</value>
                <value>&quot;Chicago&quot;</value>
                <value>&quot;New York&quot;</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:DepDelay:qk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Dest:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Origin:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:UniqueCarrier:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='DestAirport-AvgArrDelay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]' type='filter' values='relevant' />
            <card mode='checkdropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Month:ok]' type='filter' values='relevant' />
            <card pane-specification-id='0' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:ArrDelay:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Number of Records:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:ArrDelay:qk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[avg:DepDelay:qk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='#ofFlights-Ontimarrivals&amp;DeparturestoDestination'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]' type='filter' values='relevant' />
            <card mode='checkdropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]' type='filter' values='relevant' />
            <card mode='checkdropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Month:ok]' type='filter' values='relevant' />
            <card pane-specification-id='0' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Number of Records:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Month:qk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:OnTime-ArrivalFlag (copy):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='#ofFlights &amp; Avg. AirTime-PerCarrier'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Origin:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Calculation_275564049490145285:ok]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Number of Records:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='PercentageofDistanceCovered-PerCarrier'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[attr:Description:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Dest:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Origin:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:UniqueCarrier:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='#ofFlightsDiverted&amp;Cancelled'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='FlightCancellationReasons-PerCarrier'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]' type='filter' values='relevant' />
            <card mode='checkdropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]' type='filter' values='relevant' />
            <card param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Calculation_275564049101848580:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Calculation_275564049101848580:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:CancellationCode:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:UniqueCarrier:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='FlightDiversionBetweenCities-PerCarrier'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]' type='filter' values='relevant' />
            <card mode='checkdropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]' type='filter' values='relevant' />
            <card pane-specification-id='0' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[sum:Diverted:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;JetBlue Airways&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Dest:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Origin:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:UniqueCarrier:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='OnTimeArrivalPerformance-PerCarrier'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]' type='filter' values='relevant' />
            <card mode='checkdropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[attr:UniqueCarrier:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Dest:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Origin:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:UniqueCarrier:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='OnTimeDeparturePerformance-PerCarrier'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[attr:UniqueCarrier:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Dest:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Origin:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:UniqueCarrier:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='AvgAirtime vs Avg. Arr&amp;DepDelay-PerCarrier'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]' type='filter' values='relevant' />
            <card pane-specification-id='1' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[:Measure Names]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:NASDelay:ok]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Origin:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Avg. Arr &amp; Dep Delay vs Distance-PerCarrier'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Origin:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='TotalExternalDelays vs Arr &amp; Dep Delay-PerCarrier'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]' type='filter' values='relevant' />
            <card pane-specification-id='4' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Month:qk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Origin:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:UniqueCarrier:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='EarlyArrivalAfterLateDeparture-PerCarrier'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:city (airports.csv1):nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[:Measure Names]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]</field>
            <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Origin:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='DelaysAcrossDifferentMonths_Dashboard'>
      <viewpoints>
        <viewpoint name='Avg Arr &amp; DepDelay-PerMonth'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Avg. OtherDelaysPerMonth'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='NumberOfDelaysPerMonth'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='8' />
    </window>
    <window class='dashboard' name='Avg.FlightDelays&amp;NumberOfFlights_Dashboard'>
      <viewpoints>
        <viewpoint name='#ofFlights-Ontimarrivals&amp;DeparturestoDestination'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='DestAirport-AvgArrDelay'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='10' />
    </window>
    <window class='dashboard' name='OnTimePerformance_Dashboard'>
      <viewpoints>
        <viewpoint name='OnTimeArrivalPerformance-PerCarrier' />
        <viewpoint name='OnTimeDeparturePerformance-PerCarrier' />
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Diversion&amp;CancellationMetrics_Dashboard'>
      <viewpoints>
        <viewpoint name='#ofFlightsDiverted&amp;Cancelled' />
        <viewpoint name='FlightCancellationReasons-PerCarrier' />
      </viewpoints>
      <active id='8' />
    </window>
    <window class='dashboard' name='Airtime-DistanceTravlled vs Delays_Dashboard'>
      <viewpoints>
        <viewpoint name='Avg. Arr &amp; Dep Delay vs Distance-PerCarrier'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='AvgAirtime vs Avg. Arr&amp;DepDelay-PerCarrier'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1plevgf0i4o8ik1b4p8mc1o1ptfs].[none:Description:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='TotalExternalDelays vs Arr &amp; Dep Delay-PerCarrier'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='6' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='#ofFlights &amp; Avg. AirTime-PerCarrier' width='192'>
      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
      fBir7s0lZM8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='#ofFlights-Ontimarrivals&amp;DeparturestoDestination' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='#ofFlightsDiverted&amp;Cancelled' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Airtime-DistanceTravlled vs Delays_Dashboard' width='192'>
      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
      +OjjCQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='ArrDelay-DepDelay-Per Carrier' width='192'>
      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
      Ib4BBIrmD81pbBckeehuAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Avg Arr &amp; DepDelay-PerMonth' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Avg. Arr &amp; Dep Delay vs Distance-PerCarrier' width='192'>
      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
      fxKQEAtmKRJVAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Avg. OtherDelaysPerMonth' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Avg.FlightDelays&amp;NumberOfFlights_Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='AvgAirtime vs Avg. Arr&amp;DepDelay-PerCarrier' width='192'>
      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
      9AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='AvgArrDelay-PerCarrierPermonth' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='AvgArrivalDelayinMinutes-Orgin-Dest-PerCarrier' width='192'>
      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
      8/8DVoWUG4U/7mAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='AvgDepDelay-PerCarrier-PerMonth' width='192'>
      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
      H92gjyo3z8jiAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='AvgDepartureDelayinMinutes-Orgin-Dest-PerCarrier' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='DelaysAcrossDifferentMonths_Dashboard' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='DestAirport-AvgArrDelay' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Diversion&amp;CancellationMetrics_Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='EarlyArrivalAfterLateDeparture-PerCarrier' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='FlightCancellationReasons-PerCarrier' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='FlightDiversionBetweenCities-PerCarrier' width='192'>
      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
      9v8B/Bx156FnzVwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='NumberOfDelaysPerMonth' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='OnTimeArrivalPerformance-PerCarrier' width='192'>
      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
      lNzSPNkqnL8yw8Obdwn2jXH5wvTzz2w8uc16Zk8i6Wyfwt2FDYamPYmkd4U/Nlzg2NjAxtOH
      1HWbUmUvnh/rG+f8xYtcnh6gVG3g2nXW1jMAbCytkVh/zMrSOnXTot7SMdoGc1eu/kIiqVXf
      kz/qHZvlk3OjFGsZnj5NYhk16rqIqggY7X+QSJI1bnz4CR2qQyZb4OrHnkTSu8QfMwKIErvL
      86RXJcbmrhBqqRRXUwT8GopqIYnQKu5wf0lDEPaqtAKaDNhYoT7+7foZyskVKhWDgOrDL8UI
      qPLPJJJ+JFMeIq76kUQRTVP3JZK6GBgI0RY0fPsSSY7rvCCRJMt7EkmaptEZ83kSSe8YXhj0
      AHiJsLcXzwEOgG6Y6CdBIukEKcVblvWK4ulvhqO34AQgChDxJJIOFcPwJJJODE3D4cGWJ5F0
      mLwVEkmZzUU2UmUiPcOcGR88LJt+k3JmGyvYS9c/SiQZLcpth85XlUhqtYiEwy891nQctsqe
      RNLbyGu5YLXcZvLsWU4NdGPbNq7rYDsOlmmg6waO62LbexJEjmOj6zq24+DYFrqu4+zLFumG
      idUusZOu/v09x2H10SMqxp7UEa7F7tY6a/sSSVtbSSzHwbZMjEaJzVSebGJzTyJp//qu62Jb
      Jvr+OUxDxzCtv0skZbM4toWh63vSSa6DoetYnkTSO8NrjQDNSpq1nwp0958iLjVo2AKx7hFW
      738Noo+OU5dp797F0nroUNo8WdkmOnyaXivFRhXef/9D7n37H8jdM3xwqYdmGeYXb5LIlRk7
      c5n806ckLYkPLszi1EvY0VPI1QyO000yV0Rs5VnJlBgfHgQUsuksSmeE729+B4bA9Ecfs/b9
      X8nV4caf3uPuVz/QP3OBa5d+JpF073vSDRFbCTHbJbCUrDI8OcfUUPx1763HCeC1HCAUH+az
      uTk0oJbZZOnRJmMT03QNTjA5FOHRVhs10se1Cxe49eX/w9jMGQLBCN1qCHNni1zFYHJ6ls1U
      lbbdBZZBvuEye+YsoY44Haen6Z07jSRALv13iaT45M8kkq69T8QoUHxBIunCc4mkphXi7Nl+
      /EqE2TNTFGq/lEi6sS+RVGvWuHjjAyLHf+OnxyHxWg4g0uDbL76gs3+M/qjGJ9fPkC3WSSee
      kisOcfHyJVqVvYTV7Nw57i6s4QvEMPUmlZbISKdGermCLxRDsUwMX5hz0wMsb+eI9IwQjarc
      u/uED67MIfl79yWSSmxn2/T1dBJSJdSfSSTJKnsSSeEwMipdagxGd0kX6vQOu9QqFdTY4HOJ
      pFg0iugEkEWBzo4OYoE4d299S48nkfTOcOh5ANd1KBZLxOOvNoVYvH+bwbmrhI+hQF2h3ubr
      9eO/G/TZD3n87uAvcXGPRQc7LxF2ALyCmMPnuBTEHH0g1sPjCPESYQeg2rb54oknkfQ2cuIc
      oJLZ4N5CgoHJcwdXc7cN6gaE/L6fvWSQq1ToO6BEkmF7M8W3kZPlAG6bxbUCH37yCbZlU83v
      sp1rMj41TjOfIl2oEouFqbdhYqSbtZVVlEgvp+IimYqMazSp1mrEeweQbJtqtUpIEUils/jj
      g/RHFdZW14n0jdHXGTrqb+vxB3CyHMBuIAW7USQJxa4xv5JhdCDCk6fLiPUKPUNBltcrdEd1
      qjU/G6srFJtLxP50mVwtSGn1MaGBGXpF4XnEZCexgtQxws5WAt2nI0SHUF+xvtjj5HKyHECK
      4dYWSOUCyHYLBAFZEnFdl0Ckk77BGNWaQCxUpLy1Q+/Zq3TtPsU09z7u7+hj5tQgggD7L+EL
      ROjr78NoVMExkWUZUYC2rqOp6pF9VY8/hhMXBrXbVZ4sbtA9MkHAKpHINpiemcJqNQmGfdRr
      oMgGkiiyurxOsLOT3niMpi0hOwaRyF7fT8fek0gSXQc1GKZZrxPURJaXVon2jSILDj1de6WR
      XkHM28uJc4CjoNLUeZw5/rtBXdcBhCOPrR+Eve3QAkedtvMc4AB4ibDD57gkwk7WGuCIsF2X
      evPou5i9jD2JJE6ORJJ19COA5wAHoK7b/Oeylwh7Gzn0eF996xH/939+zn/+9WsqtRLb6Vct
      JdR5eH+RX3uGrc1/yb1EERyL3d30CxJJT9Z3KWy/Ymc4TyLpnefQRwDXFrn8yV/QkiuUGxVc
      t4Od1adspjLER+fooszyTgp//BQTHQ7zj9cZnrnAUMjg1t2nDJ+ZQ2/r6LUC9+4/Jj52hqmh
      brBq1JQ+7MIOjJzGdFyquQy5fBrJF8CwfBjinkTSo4V75Cpw7cNr5NcesVMRuHJphoXbPyHE
      Rl6USNpeYTWRJNg3wUyvyvy9x/ROehJJ7wqHPgK4TptbX3/JQqZCl+aSLjSoVltcuPEBeilD
      rVRl8vJ7SO0SzUYTxzVYeLTEw8UNrn70CcPxvQzsyr3bFFo6q8vLWC5UcxkKpQrZFySSUhiB
      3l9IJLn+Tq6MRdktZrl3b5VaJsF2vkSlYaMqIs7PJZIqVU5ffg+3VSaxtsbpax8x2utJJL0r
      HLoDCKLG9U//wmcfXiPo24tGyKofn8+HIgvIsoam+ZAViVKxiBaMoEkC8bCP+du32Cnsxduj
      XZ341SD9/X2IuBRyeXoGBjh9KsrKzyWS+uO/LpEk70kkxTrDdPb2E1U1QgGFne0tjBckkjQ0
      RUaRJcIhP0/u3mIrXSSV9SSS3gUOvyDGtnBEGUkAXBvLFhBwEWUJx9qLpIiyjGNb4LrohoUs
      KyiyQKvVRlY1RFwkce9vUfah+mQc20aUZMDBtl3A3WuzLooIrovturAvd+Q6DiLgCCKOqWPY
      DpqmYexLJKk+BXD3G0m5iKKE7ThIArTbbSRFRQAUZW+G6CXC3l68PMABaLQNUvUTIJHk7Esk
      HYN+Oy/Dk0g6QRiGceQJm4NwkhpjHRcH8PIAB0AQBC8T/AaQZfnIndVzgANw1D/SQTkpdsLx
      sdWbAnm80xz/1ZKHxxvEc4AD4lo6D299x8PV3efbNMxmke++/obtfA3HbPDTt39jZadAs5Tk
      u+/v0LQdCrkMpnMIg6xjs736lJ18DVyXzaf3uDm/gLF/bttocueHb1jayuE6Nkv3fuTuk3Us
      s8FP331HptKmms/RNN98NMtq15i/+Q13nqxj2wYL8ze5v7iJsz/Z0Gt5vvvma3aLTWyjwd2b
      3/J0M0u7muWHH25T1y2KmQzmG56buJbuOcBBSW+tEhyeQy1vkGvv/TILj5c4d+0y6bVlnj56
      zOjFGzSTKzxJZJgZD7GyuE25DfI/kYA9MEYdQw3QrtSwq9skrU4m4pDY2VPNTK8sEJ+5Qj29
      Tjm5RC04QcQus/bwMbHJGVJba2TKdVTpzf/keqvF+IUbqK0Cud1lzI5p1EaWYssAHFaX1zhz
      5Robi49JJZbpHL9Ic3uVre1dBvujbCZT5OoWb7pHmusKngMcFN0ViIdDDPRGqNT3t0ZrAaKB
      ELGgQAU/vSGNzg4/0VCYx0sZJKFBJrHI/JON1zdAizLUtdfKXa/rdPV3EYn1Ylt7Cbqm5aM3
      HiQaDlIvN+ke6KY7FkPs6SL99DGuC9VCkm9u3udNb+wOxOK0s1so8QFk3SLeG6c3FqZuWoCN
      IIcJBwNENAXDEYnGwgxENYSOTtYTaexmnUp6iVsPVnmTfbpFxec5wEFRBZdcpcZOskIsvBc8
      E9oNSo0axbpLh9AkVW2RLzQZGJvg+rlxAqqfYO8Ign64W6nViEZuJ0u5lEJS9vYtBRWDVK5G
      qVon1Bkiu50mUyoSjgzw4ftXCIeDSHKYAdWhcajW/JJqdpOGHGd6bAA1pJJP5UiVKoQVBZBw
      zSrVeoNKy0CVHEqlCjvlJkP9o1y/MEmsqwNJ7SZoNzBeerXfj6k3PQc4KH1j0xipReibodOt
      s5srM3dhjqd3HzB6epbT5y+SfHybjlNnCCoCTUfj1PgIIaNIrG/sta9v1jL8cPMeiY0lknqM
      0WCVzaqPiaEIO9tJeqfPUl17QHxkhlj/NB3mFi1/Lz0RDbOt0zc0ylCPRiMQ501v9bMMk8TS
      Pb768ub/384dqyAIhlEYPkqBQssPf4SBgxSZCEL3fw+6uLQEDU5t4VbwdxVN533u4eWDM3zS
      /qxyfSiFWqFIWpaXLl2r+zSqHW6qmqvez1nh1KvMkj5pqyoeFHdfbeJR/3xLkGfMoDDHBYA1
      AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoC1H7wBYS6N2XgxAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='OnTimeDeparturePerformance-PerCarrier' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='OnTimePerformance_Dashboard' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='PercentageofDistanceCovered-PerCarrier' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO296ZMcZ37n98nKo7Ky7rOr+j5wkwRIkJgZDjWSZlfaWUsOebUOrx0OhVa+
      IjbsjfAL/wP6B/xmwy929WI31nasj7XWljZmpdFIc2g4wyGHBAkSxNEN9F3ddVdlXXln+kUT
      YANogA2gARLs/LwhWMfzeyo7v5nP9/k9zy+FIAgCQkKOKZEvuwMhIV8moQBCjjWhAEKONfcI
      4Eff/1P+xZ/8C/70+z8Gs8eV5c3HbvDGR+/wz//1/31kHQwJeZZI+//n45ur/Pf/4/+ESMDP
      //Lf8G9+fJN/+Pu/z6uLef78L/6ai2/9NqcnZJarOptbNSbyCS5dusSHH17m1dcuIgCulEB0
      Bl/SzwkJeTzuuQP8/u/+Pf75//LP+H++/2Peeus7fOu7/xF/963X+dP/7/v8F3/wj/nlX32f
      fm+Xf/cXP+O73/0O2yuf0jUsrl5dRvisjZdffuXuv0NCvursE4CLHUnyT//p/0B75xZEIowH
      Q3zf3/fxvRnTS2/+GvGoxPe+913+13/2P7P4+q8/316HhBwRkf3/rG9c51/+q/+N3/qdfwCp
      aebUHj+/fI3/9B/8Lv/n//6v+dbf+49JZSqcnCkCoOXniEQ1vnVucq8Js8ef/Mmf4Pse/8f/
      +5dfws8JCXk8hKdJhL37k/+AEZvhN7/5ylH2KSTkufFUAggJedEJ8wAhx5pQACHHmlAAIcea
      u4mwW7dufZn9+FpTKpVwXffL7sbXllgshmEYT/Td8A4QcqwJBRByrHlAAMPdDX767mVur28y
      GPT3XrQ77HZszG4X8ykDXv7gMj4m3a7Jbq12z3vL167QNz4fKgy7Pe4fOPS6vUPF6e7/nNml
      +4iOr29sfta39w/V9tPQ13XcURvderp2xuMxuq4/8Nqd//bve+9p8RwTx9v/ikWnPTrgkxa6
      brFb3WRts/qIFh3GY+eh7+7/bZ1O+9D91Puff2/veOz1x7VMXP/ez5qmee9iOADXNHHFCOZo
      TNUY0G3VQfTo9gMUUyD38iwf/fXb/Of/3X/DD//tv6JULjPQFml+/APOvvV7KGaTxsAmFlhE
      Ywo/f+cjfu8f/SG125fxxSiNts5iJ8O7l3skxDY76zd4+1fX+If/5R+xvrHGdrVKy1IQuqvk
      yqcoVTR+9OP3ufjaeXTDhZHO3/3d3+XjX7yNQ0BEUflkeYvf+OYrSL7Jj372Cf/4v/7P+OlP
      36ZSyWK5Ci9XBC73csi9FURBYGfoc24qR6M34MZane98+yJGv0O93ecnf/0DolocLxLDHTcx
      7YDFUy8zam8ysBUCq0NMEXnno2X+0R/+t1RSyqH/OADjoU6r32Yc0bk+HFLJxrAdh57hc/Hs
      LLe3mgSeQOANcKUUk9kYhifS2VklGo3jiQLl+bPU1m4TT6bZbTSRPYOxt/enPHNintX1TZKq
      SLffY3d9g/lzr2K0txh4EoV4lIFh0eoOmalkiQgCt7dbnJgpMrQ89HqV6VPn8YcN6gOPtCog
      yiqq4GHICWKygF7fJpJIkFIn2F5bpj7wyMQEpIiIJQRkUtPIqoZou6zcvIrhq8QEC1WNsba2
      weTiSWKyTX+gkElLCIFBpyvgjGukJuaJyx7tvkF1fQUpNUFCMPjbKx8zffIcMVmgvbNOZekV
      8qnYA8fXcRxWV5aRtSSBYxDPxKlvdVAiMnJGYmwITOdidIwAWQweFICaKfHWQpZBo4Ug+Hx6
      +V1KJ1/izV97Cben0zQsXn39FYQAls6cJ5XSSE2eZlvuUyhmiBgBftRltlJECBx8TySTVPAK
      eYjlOXtWI5OJUymazM5dAs/CCVTSMYlLb/4GeqtGyVMQjDS5wiQD2+Kbb1xkcqpC33BR3CyC
      IFGcmQUgEY2gxJKM2jWWLnyT117zQIxxemmGqKZh+hK5mSJFs87sxW+gt2pkPIWYBG/MzZLI
      lCgWCsRSOd689BoIoLfrGMSYyC/uLewLYCCUiLoSleIJAsfAE5MklccfQaayBYr5LJ2RSzoZ
      J59J4jkm2thFjKbIZWwAIkEcN6KQ0GQM3SBfmkSWZZKZFH4kQrFYRIzGKcgio0GPhKjiWQZi
      NEY2nSSbzQIBYhCQiEWRM3liSIhCwFwuh6oNyecz4NnMBjLWuIfpRZmanSWpRXEjGcoxyKYS
      AMh4eLLCoG+RzZcQ1SiqHMVR9n3Oc2h2OmiajDl0cCMShUIJ25fQ2zskUhnmFiCeyVFIR6Ha
      RPBdIkqc+fksg56EEk8gBTZxL0IsrRFR4kh+lLkFibgawXBESpUpotLBx16LaWhTGgBikGDg
      OMwvLWINBwgxiajikczlMJtt1Jj6eSY4nAV6doSzQM+WZzIL1Go2Dn7DtzFs/+D37n7EwPah
      1+0e+P7+8blrGLjsfda3R4zua3s4OHhvQaPVfGQfDsMX9fMOhmmCbzMY2U8dczzU0Qfje17T
      uy1aXR3T/NyojMdj8F2c+waud8b5d9j/nfs/Z5oGu7s16rUaD/uLOc7Dx+EAvuvg+g/G3XvP
      pNbs4jgOnjnG9A5o4BE0Gg2c8eCxv/fF+JjmnslyHOehxwh4cAjUqW5wfW0DOZmnubXCas8n
      rwiIEY+V3TG/8+Ys760K5MQWyYkF4n6Ptz/Z5exMioii0tVHRG0dp3IOe/MTJsoVfvqL93nr
      179DLj/BTKVAr9ejun4TT8mQNLr0cpP0lq8wNVmi72nYgcj56TS1kUfgBzTf+zmT0xXUdImd
      RpdPrt3k0qtnSEVcVnbbuEGMYe1ThvIEry2VaA49tq+9R25iibFrcPHbv8n7f/PnTM4s8uOf
      Xeb82SIdJ8UbFZlVoYS9+Qm5QolfvHeVP/on/xVX33mbRCxGrT9gYmqR6sYtTi1O0+l4tAZN
      YqpG1G5Tc1L83m+99Vh/mkajQUSK0mp4aJqMlszTqDdQk1kivkev3cRGwtRbaPEoQy+FN9zl
      xLkLdOtVDBfSSQOsPm03Tl6T2NlaJxpLYA6HlE+cobe7jotCNGLR67uYtkW7sUMslcYNYth6
      lUQ6i+GC60KlUkJwDNq9PooaRwwsxKjCsDtGFjz8dAm3U0WLJ+g7Ec4tlLm9XkV0DchOUd1a
      Jy7LNA2bRExjp9Hh0ktLdIcGo+GARm9EQRMQ4imcMZw8OUPgGnQ7PWQ8uh0dUVAQ7AHRZJaJ
      Qo5ut8twOCQRE7lxc42zr14iE/9iv7W2/ClCPIvmOexGZIbdLhOVCp1mjZHpkExorK2uc/bV
      S3SrKw8KwDYMPCJk43H8kUEhK8J4hBLP8Mq5KTKlEundHfjsYmg6MD2RZ2JqCtwBXX1EaXqW
      TgAnLrzBoLXDhddfJ53OM5WPMbJ9VFUlVp4FAdJSgqHuc+7CG9jddUgX2V5fI1k6zY33PmKi
      VGCiMkFvMEbfvoqQLDE3PUFc01BzJezVGgImuUKFSmYSQdi7omWKk0iBy4VXTuMFUJko0dEH
      vP76ebSoRzFRolSQ2d0xOXHhDTr1LS6+8dq+AyLw6vmzWEqFfCzAdCyIRDl95gyKAL2GSDpR
      eqyTHyBbKIHr0OoOiGpJ0okYVKaBAM/1cD0P2/UoT80S+CbuECLxGGPTwfd9FEVF77RRoyKl
      Uglv2KFQqjAedHFsCw/w/QBFVVBkiclEHNezGPd7JFJxItE8OgappEYmlmLYGxMAkqIyUVIJ
      gMFnU1SlyiS+2WcIFKZmcSyDvvH5HTmezKDlMjiSg2s5zE1lafZMpioTiGqcztYO+XQSKRrH
      s4ZIImRLJUzTxB6PiGoK47FNMpOm19aJRgDfpj80EXybSETER6JQniIqH85viUoMSRTAEyiV
      J5G9vfMhkcoST0HgGHfbE5XYgx7ANkykmBomCI6Qx/EA3XYDOZYmoUUfK4bnWNRaOpOV0ldj
      R57n0DddUvEHZ2oe/TUHQZKJPMaPOFIPoBxw8t/NB3xGq3Hw+Lvb2mW73nmijgBsr9+iN7Ix
      DJNu7975/m5rlxs3V+kOP78C3fESpmk88NrDuL9duONDXHrd4aM7+AU+4Itiw8Fj6f1k86XP
      rnYHz5M/bMwuylGm9p389nhIWx/cG9MzGTxi7v1QOGMO1YQo3z35x+MhpmGwW2tSuy/3c0/T
      joMoP97J/zg4joMzHrO/+w/cAUy9zr/8tz/kt759Acv2ERIpYlaTQCkyHLZZ2enzynyFUkbj
      +toGEFDtOJyc0GgOhuSyOYyRQy6vYVsBvX4PJZYg5vboRQqodpNYMo8bidJavUJq7jWm0lDt
      GBidHd548zv85Mc/Y2qqSCDFqa1cZuLstwn0TSQ5Q7KSI2qN2WoZiLaOls6xsdMgIzmcfuM3
      aG3cYOTLuN1NSBTYaYxYysNaX2Y+JxJJFMhGA6odg7Ts7PMhOdo3VpkoF3j7l1f4o3/yh1x5
      +5dk0xo9MY08qqEmVCwzRl9v882/8+u8+xf/jnhugt7YpVyZZnV1jf/kd37rgQO//w6wu72J
      6UXA0gmUOCktzmA0oKWPefXUHJv1BqbhUp7MUN/qkkiqbNXaLMyUSGaLVNdXSOfKRFUZo99D
      UKJU11bJlcoEkspcMXW3jcrUJJ45oDd0sAcNEtksQiTJVnWLM6cXERHY2lzn9Muv0dhew7Bd
      0tk0G8srTMwvYVsWiWgEO5Do1TdJZMsITp/k9CsMtj8FJYHvC8TUCEEgYBoWCC7pTI6t7QYX
      Lpyjur4KikTEsum7CrY1RLAHaIkC0UyC5tpt0sVJfNcFKaBYqJD5bOr1sOy/Ayxf/4RUJs/t
      tSqVUoKxrxIXHRLZEsNOHVWKorsOuXSKzZ32gx5AH4w5NTdLNFukACQqZWobAvVGg5QWZbKQ
      RYtrd71CMpXipWKCXEqjLATgGNxaq5PKTyAFUJ4sAwGNbZdsVKFSeBm9XWPgQWlqjtJkEW+0
      d0d56dU3yKTTzE2WyE3NogggmPNMlnJEinGigUDbMbFsm9F4zIVz5xAAy7bIqBE63S6qqjI2
      A6KJHHIsTiLSR8pMcG4iw7CxRVKLgbd3RSzc40NMXnntG3Rrtx7wAqdOLbH87hbeyEWSMpw/
      exIP0DJFYlLA9IVXqG01iSfiX/jH0pJp4kCvayOpGkNjTCquoaif/9FzmQwBEaZmZ+h3W0xP
      VdCScZKaSjabJZlU2GkOEV0bNRolVyiTzWZptLtACoB0tkAunaQx7qMoMtF0jlQqSU93KGTS
      yIHDwI+S1KIYlksykyOJgG/1yRULDMcmqhTBdmwiskIqkycejzIaKMji3lhblMByIKolUXAx
      DYtkMsXYsIhJ4PgBfhCgKjKypJKI5/AsnX5PQYvGSZcKOP0BcU0jEYsy9Gx4ygFcKplkZJhM
      TU+iiD4JNbGXMxAgk83imB4zxSwtfUw6qT15HuDL9ArN3U3Ggcrc5OOb0Cfl5qdXmFw6R1KV
      H/u7R50HMEYDJDUBvossP35/AAb9PolU6qGnm+M4yLJ8979fZY48D3Bnbv5RHOQVDsP6rWu8
      /9FVTONwq4qMAz5XrMwe+uRfX9945Puj8UHrWR7k9EsXnujkfzw8HOfBSfHAc+j09nyY6zhE
      40lkUTjUiek5DgdNsyf3nfwH+Yo7bR8U42FturaJaT96Ut+2D14E9UX5iGfFA0Mga9Dl7R+9
      w/w3z2MPXPxxG7s3IpiZJ+d12amPmFlYpNnu0KttUMzPkqkkaLcNEpKNp2SYzmusVDvEA5NP
      13f49rfeQBQE8vk88ycmMT41ufLBO+SnT8GoRteNcenCOW7f/IjmSORbF1/h2seXmZg7Tb9d
      J6ZptGo7aOkimZRGKpfmw1/8HD8SZXpxiUajRXP7JifOvQaYuLpI37c4O5/l2s0Neo1d8sVJ
      +p7LyUqeD29uUEqnCLwROz2b6WIKzzawI3EESyc/tYSl13ACkXqtQWlyksbuDrFEBhUTMVHE
      7FVJZytsVWsUKzniIhjI9HbqvPKNSzxslUSv06TXH6FqSQJ7iBaP0+oOcD2fQjFBfUunWM7j
      AaVsgs2tXfBc1HyJ1ZUbyHIMK4BSPs3Y8shoUXwEDNvC9QRwxqhqjIHtMz1RwNJ1aqMBWjJH
      Ug4YWj6+NUCNpejqfeYW5thcXyWbLzEaDSlVpuk1qqiJFP3+kFQiiu2JWKMuiUyJbmMbVYoy
      CKBczDEcWvQ7NeaWzjLQdYIA+oEHEYmIZ2LKWbKxCJYxRJDjWMaApBZjYHkIjkEkqmENB0ix
      OOVS4alP6FarhWUMicVTDIYGcVVEEGVM2yUmgyBF6fcGxBIxIr774EW83W4RESWufvQ+Vz5d
      Zmv1Jr6sQCBgDltUTiyy8tGn/PCnb1MqFjEti0azRaPdQlKTREWPVru1VyVOUMilYvRaW/RG
      7j2zSRNTC0iBjWkM+eD9j/AA0xzz8a8uY+Hy/i9/ycrtdfrtGo1WnR/+4Ec4nsMHHy8jCS7F
      yQlKmQwfvneZn79/hWJxgm5/xMLcBFvVOgh7a07OLZZpdA22VpYpLyzQblT5yQ9/Ss80CSIK
      2ZSKaZqI0Tiq7PHTH/6AnWaXdrvFsNnCCAzWt7uUyxOk41E6nQ66XuO9X7zLR5dvsVgp0DZN
      Lr/7Njdvb3Dz0w/Qxw+/Cnp+hEQiiSR6DIdjBt0m6UKOSGRvDr5UKTPWu2zv1LGHQxwcfGLk
      syni8QSCIFJKxtmobrJbb6FqKuubVVo7m9QaLbY31tjd3iSeyd/NgCY+8yaj4Qhw2VjbYHur
      QSEZ5871uN+usbK6jmm79DpNtjbWWV/fZmNznXqrQyyexHUM4okEEKGcS7DbaHJrbZ1EIrG3
      hqrboaMPECIyAgJpTSaCx06zR626zfbO3gxQu1lnbX0LSYkRcYeMTP/Ipm5d1yGqJTB6bRzA
      FyIY/Rab1drdPtSrmwxNB0Tp+awFWl+9zcziEuJTtmP0O3Qtgcli9kj69ST0uj0y2cxjfedZ
      rgXyHBN97JBLJ59J+y8Cz3VHmG+P6OrjA9eWbG6sH/j6RGXqqU9+gFgqd+DJbz7hj7+DYR78
      /fX1DbY3N+/5TY978t/PeKDTbB9uT8NBuI5ztz+WbSPK6hOf/HfW+eznsGPxO5/zHOuBNkaj
      w/mqh7X7NMeo06rTH33+93yY57jDg0shRjof3tygklERtDyaDP1+n1QqTXN3k7hostLJ8O23
      zrB57WPiyTQ7nRGvn53jVx9dwxjpKMkM7caQs0tZfvreKpmoTXnhFMNWnbnTr9DeXsb2Y5Tz
      KdpjHd8JuLayxvmT07hSkmFrE9uPMDk5T6PToZiUMRyPQNIox4a8typQSQzJT51Esvt8vLzF
      qdkCpiOwvL7F+ZPTEIvT2O2TjNp0hzZTlSxdXWA47LG4WKE7cKnER7y3KhC1N1k49TKtep3T
      r7xGbfUavhhhZXmHvjHi24JAv1PHlRJMZjU6BpjdbfLlGXZqbRbmpxEFAdwx67UBr18499AD
      blgOKha7bQgcBzGwiChxnHEfLZllPBrQ0QfMz04B0O92iWoaQUQmpYrcur3F5GwF0/IIPJvA
      sVHiGWJRCS0ep7mzhRnIzE6V2a1ugONiqFnKCYlmSyeXSzKyPETPQvR9xtEkscBCVOJEIx63
      t2rMzexV+hsPdFxkoqKPg4TgGMjxNPlMCl1vo0ZTjNu7OOkJMopAPB4HAnY21ihNzSHLYDoe
      uj6kmEsDoHfbuLZPNJsnHRXoDiwkbJBiuOaAQIqhSpF7jpGMg6iojAyLmanKI0/oABG928I3
      o3iiijPqYbmQzuWQIwKqIrFTa5LKZJAiAuIf//Ef/zFAp7OXwW1UV/mzf/9jCiWNRs+hpPqs
      V6t0xh7v/egviKczOJEMM7MFfvIXf8bA8bh2bZWLl15HU2Xqu1Usb0Q2uUB5Ksvudo2p2Vki
      RoM//8u/Zf70S7R2N3BNi0+vLuNHPVo9n7js4xgGfcujVCySiEvcuPwhHy1vMbswQ0byeO/q
      Bq+fP8F2TWfcbeKLUaxRj7Hts/Lxe3iJMjHB5ubHH2DJIhPZRRQ1QjyRwDebVOsBp2dyvPvp
      h2zv9nnjwkm2ayNmZ8sYjVX+8m/f5/RLr/KT//B/oU3MszC9QDaXQI4E1Ko1Allma/kTNjsW
      i3Mz6NV1hmIMyejiymkGrRrVZo9SMYdtW0Sje8sZ4vH43Rqr/W6L/tBkONRpdYcogo/nO2xu
      rmNbItNLc4z7PczRkN7IJB7XqG+vM3YjKGLAaGQxGnboDmwSUVhfX0dV07T1AcVchl6nwcZ2
      k+npItc+vko0qiGocSKuiTEc0up10Ic2/dYupmkxdkFwDQamhxg4jCwH3x7T6Y3QNA0Bj4gk
      I0ZgoOu4gQCuiem61HdqOKZDPJuk1emjqQruuEdn5DLsdOh02ziCjDEc4ppjeiOTQatGLJlD
      jEYx9Ra3NneZKBaICC59fYgSixE4xj3HSI74GKMBW7U2xWIOz3WRpM+v3bIs3x1iNnarOEGE
      1u4WNgqiM2R9fZV4rsxgOELxDa6trJFKJDEcJ9wPcBSsrt5mYXHpoUbuUR5gPB6jadpTxbeM
      EZYfeeS6m6OIU9vZQksVSCXujWOMdPxIDHzns7vAvrgDnc7QZLoy8VSxH8VhPMB40AM5gabe
      O+gJBfAcCDfEPFvCsighIU9IKICQY00ogJBjTSiAkGPNXROs6/ojNyuEhNyPpmnk8/mnnl36
      Mrk7J/SLX/winKkIeWzK5TKXLl36srvxxNwVQLlcfuKppJDjSz6f/7K78FSEj0gKOdaEJjjk
      WBMKIORYEwog5FgTCiDkWBMKIORYEwog5FgTCiDkWPPAlsivOq2BhfeMy796no8oPttrQxjj
      y4shiwI5ba/e0WMIwGd1eZlseYZs6vNdP5ZlYTs2ycTDN2Zb1t72wObONqnyNJ65tzup1+uh
      KMqBa0msUZ+1aotTpxbvuU29vz2k9YiyIyEhX8REQua3T2d5+yd/9XgCMC0Ho99lZ2sVWcuR
      1kR2tjaIJdJYXsBkae/hF0lV4IMrN5idXyQaU2k32nzjzUsYtoGx0yBKj5V1mYwWIRoLWLne
      Q0vEuXl7g8XZPJmJRTxD58ypRdZvL+OJMZbmZ57dEQk5hnj0OvrjeQBFUbCsvWJLvmOy2+hQ
      LBaJJdJMl0sEzpCIKENEZWbhBKVCFtNyyWeS4Ft0e2Mse2+90fT0NKqq7v17fhFRCDixtEA2
      m2M46JNKqNxYXr1bAuSLyoqHhDwWnkuuMPHirQVaaYwwnvGiVd/3iUSe7bg2jPHlxYgrEZYK
      exv7XzgTnI1JPLym8dHwIhq7MMbhkcXPz59DC2B3e5t8LoElZUh+9qwyx7IQoxKjgUUyefCm
      CNuyUKJRPGNAY+ST1uQvNMCw93TIRPJBYx2a4JCn5QlNsMPa8nXsxCyBNSAVE9G7OtnpSZrr
      e08djCoBES1D4/ZV1EyRdt8mHwuYXDjNWO/iAn0vys7WOjYy+XSKWnWTQI6xefMqxclZ7IjK
      xZdOMmxucvO2RyaTIyJGWPisWllIyNHwmCZYiaWJaxrKZ0U+E5kcJxbmgAjzJ05TyCrYgYwx
      GJLOlygWSmiCR6ZUBEHAtsZ0ewMCIFuY2DPGQCZXJJOMUSrP7D318DOTrCgK84vzBH6AQGiC
      Q46Y0AQ/nBfR2IUxDk9ogr+AF9HYhTEORzYmoUift/WAAEb9DjZRopKApmnsrC/T82KcWzog
      ERU4bO90yGWTh6oM4DsGy7c3WDhxhughpGdZFp7n3dN2aIJDnobfPpXBaa9TbVtojB8UQEcf
      EgRD7KjCxtoKi9MlbDfP9U+vIEsSHSNCSrZJ5CrEAouhHSAPApq1Kg4KEc9Gy2TYvX0dNTNB
      Opmm02uSzJYRPZOTp89Q21plYIHoGkQUFdPxiYkeRFVG3TGSMMYkhmmZLMxOv9BlN0K+evQ6
      HTxf5eUL5x40weOBjj7cy/aWKtNEFQVVFihVppEkmWQ8SrEyTUwRGdsWtt7B8PZM8VwpQSBL
      DIYOaiKDlkjSaNWYLOYYDQcUMglu3ryB9dkYPleqIAbuPeO7yelpJEUjlUyR+WxqdTwehyY4
      5MjI5vKMRiO2tpvP1gT7jknfDMgkH162+85CucMSmuAwxtOwmFdJRD9/XtELNwsULocOYzwJ
      cUW858S/wxPPAq3fXiaRr1DI3Jut3buiS4zHLpr2+ZU9zASHfJmcr8R5OTXiB+/c5OL5JdZ3
      OnzztZefXADDwRA50mZl0MPp9UjEFDqjMZYvMj9TZNgYcn11lXMvnSSVLWL2w0xwyJdLv9XB
      jXhcv3YDogkCnmJLZGVmnlwqyfTMnYeWRVhcmCWfLwIQILB0cpF4MkMhkwwzwSFfOlI6T9I3
      yU5MYY0NOrr+4nmA0ASHMZ6EiaTMxJ1VnPsIM8EH8KIYuzDGvdyf5T0MDxVAr9dDFEW6rTpq
      qkApn2Z7e4dcLnu4xJQ9YECS+0U37nfpjcbEk0W6rR3m5+cf0cQAkkn2NxGa4JCHsT/Lm1Ec
      bCXNK4sVfvLzd8lmc3Q7bcqVSZR4ilQsRqGQfbgAdL2HokSxLAtVEBi1d2kNbSR5QLdZw3BA
      inhEtAyD3dugZsilk3Q6PZRklpN5gZ3WGLPbIF1MoSgJJkt5Wr0BsizT72yxvdNm1K1jiGli
      gUU8Fcf0YPf2TSbmT2G1u5z89jd48MYVEnIwd7K8mXSKmzs6yEucmiujFBfpbX+f9jCLublO
      EC/wW4U3Hm6CbWPE2PKQZRnLtNDHNlFbp2d4qIkMS3Olu8ufZTVBTEtQb7SYmSxijIYgKiiS
      xMLsJIEgAD7jsYkgCCiKgm+7zC7MEk9mmJwoUJmexnddTHNMqTxDKqYgqSoiYSY45PDcyfI2
      2x1ESaSn65h+lKijg6oxv3CSUwvTDId7ky1HZ4J9h27fJJt5eHkUAM8aYQZR4uqDN59WvYoY
      y9xTduV+QhMcxngY92d5D8MLNwsUZoLDGHfYX+DqSTnQA9Sq2xQmp/FsC8MwyFauxMcAABIE
      SURBVGQyd9+zLPuzTK+NpqkEnsXyyhqTc0skY593xrYsLNsmeUA2d6+dvTVAenOHSGpvpehh
      MsShCQ65w/69vbMLZ1lbW+G1N3+TYW2V9caQvOrjKAk69Tbnzp2kUCg80MaBArCtPpvrW9Rb
      DSZLedZufEwqX6Q3cnDcgPm5Cma3z1gQOTNXwHZ99HadjY5OqlRAETy2VjdIZrP4gsS4tUWs
      NEfj9nVKc0uIShS9UePVb7yJbthg7KBE4fbKOsmMRiwaY23lOoqqcXNlk4XFCun8NNMTuWd+
      UENeNPb29i6+lGSqmMHzAjLpNN2b2wSyjacM0DsjPv74CifPvcpM+d5nmj0ggMAd0el7JDOQ
      SWqoqoqayCDhMb84j97q4wOCAIIgABKKHME0LWCvpGHfgUIxRzSZR5UE2oFFOiHjVqZQonFG
      oxHFfAYBn363h6SlUKIKk9PTuO4YAqhMzzPoNlg6uUgmqaIP+hAKIOR+PtvbW71xmZ1RwIV8
      j8iohSSLKEoUW8nw+utLtDu7jA94COQL5wFCExzGuMP+vb1PSpgJPoCvu3n8OsR42PLmx+XI
      BbA/e2tbFgO9TaM7pjxRILvPTAPgGWw3RuTS2qG3PYYmOATuXd786itLGA4szkxy9cP3iOVn
      6TW3OT0/w83dHnPl/IEGGJ6FAIZDNuub1OtDEhGfVC6HMbbo6T1syyRA4Pa1jygtXSAVsTFd
      GPQ9GjtbuJIGjkkqk2Fz+SrxwtTenuJOnUwxNMEh93JneXOmMEl/bWXvtUGfre5NFmcmMUyT
      dm2bTnWNb333eySVB0cOR3zvctlsdklE48zPzFAo5lAUBUUUkVUVY6jT0QfkS2Vy6QSmbTHq
      9nACSGYLTGdiRGSRvuGjpXIkEgkajRrlfJbhoH+0XQ154bmzvHl1dYWr11Zo6zr5XI7Jcpnb
      1z6m76ucPX0aTXIwrINHDV9pE+xZY0ZuhFRcvftaaILDGPDw5c2Py1daAAcRZoKPd4yjOOn3
      80QewBjqbG43mZiaIPOQTO8dwurQIUfJH7xe4upH7yEnKwzqt5g+fYmEMOL9T9c5vTjBylaL
      nOyQrSySLhRJKI8W5xMJwLZtPALatSqjcR4ZF707RFYIq0OHPHN6nQ65uEwsdYbm7jp+UoXe
      Cl3hHPHYCGOos3HlY+YWFnn5zNIj23qie5ckSQiOhZopEDg2nUad6flKWB065Lmwt+RZpFn9
      iFhMIxJLYillhluf0B+NOffSeWZnKgdmfu/nSDxAt9slm80+bTOHIjTBxzvG+cmHL5V/EkIT
      fABfR/P4IsdQRUhrz2Zf4Bd4gIDVlWXylTnSic+nIm3Lwr2vavMd9pc67PV6ZDKZB5Y8g81g
      AKLohiY45As5V4pyUVO4fPkDKvk0212LS6++xLWP3keIZ9F3t5mYnKZjuo/M+h7EIwXgD2oo
      hUV8s83V1TaxhIrrB/SbTUozc1CrYgUyzc2b5IpTWJ6zVxhruswnv3qP4omX9wRw35Lnly7M
      MhxCRBiFJjjkUPRbO6zXusSVCDdWNrj06ku02i0ihsF47LHzycckkqlHZn0P4pECiMQL9K8t
      4yX3xl1aKoMiCCjsXYETmRyJAHyzTDaVJJZO0OjZeOaIialJPEGCA5Y8RxCp79wiXy6RyRUJ
      8DDLMxRLJTZ26sAdEzxBt6UjiHsmOCyTfnyxbBtr0AJllulKhZ6uoygKRNNkk21Onv81JM9i
      c/lDDMsjqRxugvOF8wChCT5+MfJahKnM0y17fhjhcugD+LqYxxc1xv3ZXtd9dle8BwTgDDus
      d2xOzpYP/MLDhiLVzTWsQGFxburua0a7hpMqk/psq/DytWssnj2NbexVjq7Vd0kls2ia+kB7
      7XabfD7/wOuhCf768wevl7AHLW7Whozr65QXz1FOyaxU25QSEjceM9v7KB4QwNpmldbQJmJ2
      6OgjkimNW9dvU5lfpFQqMqqtY8cLMKxjRNIobp9cZQHftkFW+OAXPyESSxCIErLh48RbNJs6
      3/vNb9KsbSAk4tg7OuJUAdUfMaju0PNdkOJ0ujo5xWby1EUirs3t5euM3Ajnz51+muMZ8gJy
      fbWKh02r2UHJ9JibPIUcaVAoThJvPV6291E8IIDS5AzlAHxJpDQJBD5iIBDPlpicKNBVAhqd
      MfFihUDSyCZnCQBT8hhYUKzMIEUVPnz/V5w+d4liWiUZT+EaY86/9T3ccQtnOkZmusS418ZT
      EkxlEnR1k0w6hSZ6aFEJSU2QSCQA4W4WODTBxwd71KUxNFBiScTAZmdnh6ufXKW2U8OXNb7x
      0nnU7fqhsr2PIjTBB/B1MY8vaoz7s72u6yJJz8auhib4AF5U8/iixziKQlePy1MIwKFe6yPJ
      7JlVz6LXM9DymbvFbPvtNrF8ns72bcTkNJp8J3ts0G5DLBY8dFjTabfJhSb4WHGn0NXurY8Z
      iDm2lz/i7Jvfw2ndZrfroDGm70fwDPehha4el6cQQIBpWkhewEcfvEtak6jpEkVL58Z7V5hZ
      OoE9GnMhn6e620TSHVIJkXZjzGuXlrBtGA7aGCOdQFbYuH6T6cVFGn2Tv/PWJezOJu+srqPG
      UmTS8TATfFzwTBrVdbylk0xMzjGRkrm63MELNF6+cI5Pb22yVt14aKGrx+UpBKDguwPERIml
      U+fAGZKcUBmZNqfPnCCVydESJUR8Fk+eJQh8BMEnn5sigkSvdYv85CT5fI4AkIOAVCaHmtgr
      sJXIlXl5Oo3RHzO27TATfExwLJPu2EHWm2TiSfq6TjaXp77ZYmu7yZmzL5FLph9a6OpxCU3w
      Abyo5vFFj/GwQlehCd5HaIK/njGOeq/vYXlqAQw7TTo2KIJPeWLi7uv3Z3KNXovdkU85m0DT
      NOr1GslkKjTBIcD+7O8Ir1elcuI88WBvr+/STI6t5ohUxDiS7O9+nloAm9UqQxtKhSzv/uxv
      iKYLbFXbnJrLMTBdbl/5JYsXvoPVrdIzfCJujnG/C0oc07BCExxyl73sb5+V63XSkyfw3AH0
      VnjXXKCcimHY4yPJ/u7nqQUwOTNPQICAgDA1i6zGiSlxJqYm8GyD2RNnSGkyYnyOchAQCAL5
      XA7P27uKhyY45A72qEtjDDNzWQy9TayQw1LKXFwqsbxe47WLR5P93U9ogg/gRTOPX4cYj9rr
      G5rgfYQm+MWP8WUZ3oN4bAHcMbOLU6UD3vXvPjrpYd8LTXDIfsNbio6xtTmykQHvf7rOd77z
      DT66/CHRwLpreNVnqOHHFsDG9p6Z9QZNeoMx6USU68sbzCwsMVFM0dluEMlkMZsbRNIl/OGI
      0swco85uaIJD7nJ9tYoXONQ6HbxMCVHdM7w/+qWG4Pmk+dzwnjkx98z68dgCKE/vmdmILFEO
      QMAjQCZVKFEpZoiJCo3+eG9ZtJYgOTuPgEdSC01wyOfYoy617oik4hEJdogslrCUMjNpgStX
      trj093/tyA3vQYQm+ABeJPP4IsZ43OJWoQneR2iCX+wYXyUDDEcogGvXrjFVzNG1YX7qwf3E
      oQkOgYMN8JQ65Afv3OSlU1Ns1LpkJfvIM74P48gEIDhjdgcJnNYm//7Dy8zPTRHIcZqrn4aZ
      4JB7uN8AJ6N7jzpKpdN0r6+hJjnyjO/DODIBTC+eZDi0UObmkVIjctkMbhAQCzPBIfdxvwEe
      zuZJ+uus7zQRJYlzL517LgYYQhN8IF9V8/h1iPEk1Z1DE7yP0AS/uDHiytM/1/eoeXoBGG0+
      uNVkZqpCKZemVq+T0LR7KjvXwz3BIew92/f8ZJzLlz/g4sWLfHD5Q16/eJFrV94HLcugvk06
      V2Tki49d5flJeXoBeDaTC2fQ137FOz+vM3viLPLuNslUil9dWeH3f/93wj3BIXe5U+W5eOs6
      XcMHIJNMsdYekkuq7NZbOJ7z2FWen5SnF4CSoHXrBnNzp3GlJJl8BjUSZ2S5nDu1BOGe4JB9
      3KnyXNezNLe2aOonaXXbSIJEu29Rmp4lpUqPXeX5SQlN8AF8Fc3j1yHGkz7bNzTB+whN8IsX
      48soeHVYDi0Ao93gVqvLqROniX6RmfcdxjZoqnz3UUdhJvj4sr/glRmbYGP5U95467tYnW3W
      6kNePVXm6nqTfrN9ZAWvDsuhBeDZNh7Q3tlkHEiMmlskVJGOOMFg/TIT04tsNvrMZESihQKj
      +pjtZoPpySyzC6dpbIeZ4GPN3YJXiwjjHiM34NaNm/hqlmvLm3jeCL3TO7KCV4fl0AJQEgmU
      /gg5kSGPx6ARkC3NUEpP0JLGaKkMopogF5cZDHukiwXUVJxCPg6CcHcZdZgJPp7cKXhlri8T
      UzVajRYzM9Nc32wRF6DadXjj9fNHVvDqsIQm+AC+aubxRY/xsIJXhyU0wfsITfCLFeOrtvz5
      fp6rALbWbxNRU0yViwe+v3+YE5rgrwefL38eYDa2mFg8RyEW8O6H11lcmGa73iMtWc9t+fP9
      PFcBBBGFqazCry5/guxZjIIAVYkSw6DnxpgsijQbIpcunQlN8NeIvYJXAdOzs3hCQK/TZtxv
      s15T6fX6KEnhuS1/vp/nKoCYEqHaMchoIsnMAmo8ikjAUO8QRyGdEMnnMkBogr9O7BW8ctha
      vsWFb1zCtAXiWpSIICJJ8nNd/nw/oQk+gK+Kefw6xHiS5c/3E5rgfYQm+OhiHEWG9lmenM+D
      J+q5029ydbNJKV+iUinwsENcr9WZKO9VjA4zwV89JhIyv30qzi9+9g7l6Vk2N9Z4463v0t+9
      zXpjSF71sZU43XrnuWdonxdPJIDAsXERqLdaOOMOvZGLKroEcoydW9dIlhbI5rMogsVf/tkv
      OffN7zBuhZngrySCQiouYwXS3QxtJp2me3ObpTPT3NzeRe8MnnuG9nnxRAIQYyleOjuFPegh
      iiJ3rgsBHhJnSMSTjByPdKbAiTOnSCdipNQwE/yVxB7TGbto1OGzDK3ltZFkkWa7g6ikeP31
      heeeoX1ehCb4AL4K5vF5xHjaDC08Hw/wLGO8cALwPA9RfLZ7S8MYxyfG8027HQHP+qoZxjhe
      MV44AQj4bFd3ALDGAxodHb3TpD82qdXqWJb1WO3p3S4+sLO9jR+A55jsNtqYQ51Wt0+9VsO2
      LLynuE82a1UGY+uZxui16jQ7Op1mjbHlAgHV6g6B51DdqaN3mhi2i2XZTx6EgF7v2cbQO022
      durPNEbgu2xsbmMO9RdvCFTb3kQSPPzsHOPmJoEfIEQEArPLasNjrhRnauEUsUOW4Ni6fZt8
      MU7LkMD1wTXwfB8iAvgBne1VlIk5ZienSCeebLzc77Zo7m4j56efWYxuq85Oa0BCFfEDgXxM
      wpAE1jf6TOdUWsYQwXbJlmefeCantbtNo28TjwrPLMb1qx9TmJxn3G8/sxgbt65jRuKoov/i
      3QGiikS13iZwTATPZjC2sEZ9HCnLq6encTyPRqN56Pb0botmb0xzp0okCACftj4Cx2JkOpx+
      5VUkz6FRbzxxn69fv4aWSj/TGJZlYlkmo34PXxBxfZ+dap1UQqHe1jlz8gTxqMpu88lj9AcD
      et3OM42Rz2fZ3t56pjFiWpxhs87Isl68O0BIyFHywt0BQkKOklAAIceaUABfQ6obt+n0xwDY
      I50PPviAZndwwCcDqtXqI9vS+zoArVaLmzdvcvPmzaPu7pfKi7uML+RgnB7LGzr+7U1yqRjx
      /BSm7TDeXueTlsyw2SWaSKNiIPomP7ra5Xd/bYRj2jRMiYTXI12YxDBseqMRrjPmrW+9Sbvd
      Znl5mVOnTn3Zv/BICe8AXzdEhWFnh0BUGDt7OQiAUX9EtdWGQMAY9fjp3/wVf/PL28zEBvz0
      kw0mMxHEZImhCT/74fepN7f467/9+T1Nz8zMcPr06S/jVz0zwlmgkEPRarXQNO1rtyAxFEDI
      sSYcAoUca0IBhBxrQgGEHGtCAYQca0IBhBxrQgGEHGtCAYQca0IBhBxrQgGEHGtCAYQca0IB
      hBxrQgGEHGtCAYQca0IBhBxrQgGEHGtCAYQca0IBhBxrQgGEHGtCAYQca0IBhBxrQgGEHGtC
      AYQca0IBhBxrQgGEHGtCAYQca0IBhBxrQgGEHGtCAYQca0IBhBxrQgGEHGtCAYQca0IBhBxr
      QgGEHGtCAYQca0IBhBxrQgGEHGv+f3bly5GXsC0aAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='TotalExternalDelays vs Arr &amp; Dep Delay-PerCarrier' width='192'>
      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
      Q+d99AAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
